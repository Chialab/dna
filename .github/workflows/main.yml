name: Main
on:
  push:
    branches:
      - master
      - chore/4.0.0
  pull_request:
    branches:
      - master

jobs:
  # BUILD
  build:
    name: Build
    if: "! contains(toJSON(github.event.commits.*.message), 'docs:')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Set up NPM cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: npm-cache-${{ hashFiles('**/package-lock.json') }}

      - name: Install project dependencies
        run: npm install

      - name: Run build script
        run: npm run build

      - name: Upload core build
        uses: actions/upload-artifact@v2
        with:
          name: DNA
          path: dist

  # TEST
  test-browser:
    name: Test Browsers
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Set up NPM cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: npm-cache-${{ hashFiles('**/package-lock.json') }}

      - name: Install project dependencies
        run: npm install

      - name: Fetch core artifacts
        uses: actions/download-artifact@v2
        with:
          name: DNA
          path: dist

      - name: Run tests
        run: npm run test:browser -- --headless

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v1
        with:
          file: coverage/lcov.info

  # test-node:
  #   name: Test Node
  #   needs:
  #     - build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout the repository
  #       uses: actions/checkout@v1
  #     - name: Setup Node
  #       uses: actions/setup-node@v1
  #     - name: Set up NPM cache
  #       uses: actions/cache@v1
  #       with:
  #         path: ~/.npm
  #         key: npm-cache-${{ hashFiles('**/yarn.lock') }}
  #     - name: Get yarn cache directory path
  #       id: yarn-cache-dir-path
  #       run: echo "::set-output name=dir::$(yarn cache dir)"
  #     - uses: actions/cache@v1
  #       with:
  #         path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-
  #     - name: Install RNA
  #       run: npm install -g @chialab/rna-cli@beta
  #     - name: Install project dependencies
  #       run: yarn install
  #     - name: Fetch core artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: DNA
  #         path: dist
  #     - name: Prepare tests
  #       run: yarn run symlink
  #     - name: Run tests
  #       run: yarn run test:node
  #     - name: Upload coverage to codecov
  #       uses: codecov/codecov-action@v1
  #       with:
  #         token: ${{ secrets.CODECOV_TOKEN }}
  #         file: test/__coverage__/*/lcov.info

  # test-saucelabs:
  #   name: Test SauceLabs
  #   needs:
  #     - build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout the repository
  #       uses: actions/checkout@v1
  #     - name: Setup Node
  #       uses: actions/setup-node@v1
  #     - name: Set up NPM cache
  #       uses: actions/cache@v1
  #       with:
  #         path: ~/.npm
  #         key: npm-cache-${{ hashFiles('**/yarn.lock') }}
  #     - name: Get yarn cache directory path
  #       id: yarn-cache-dir-path
  #       run: echo "::set-output name=dir::$(yarn cache dir)"
  #     - uses: actions/cache@v1
  #       with:
  #         path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-
  #     - name: Install RNA
  #       run: npm install -g @chialab/rna-cli@beta
  #     - name: Install project dependencies
  #       run: yarn install
  #     - name: Fetch core artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: DNA
  #         path: dist
  #     - name: Prepare tests
  #       run: yarn run symlink
  #     - name: Run tests
  #       run: yarn run test:saucelabs
  #       env:
  #         SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
  #         SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
  #     - name: Upload coverage to codecov
  #       uses: codecov/codecov-action@v1
  #       with:
  #         token: ${{ secrets.CODECOV_TOKEN }}
  #         file: test/__coverage__/*/lcov.info
