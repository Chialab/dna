{"version":3,"sources":["../src/dna-attributes-component.next.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;;IAOA,sBAAsB;WAAtB,sBAAsB;;UAAtB,sBAAsB;wBAAtB,sBAAsB;;6BAAtB,sBAAsB;;;cAAtB,sBAAsB;;;;;;SAInB,2BAAG;AACjB,eAAY,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClD,OAAI,UAAU,GAAG,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC;AACjC,QAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AACnD,QAAI,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AACzB,QAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACnE;GACP;;;;;;;;;;;SAQuB,kCAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE;AAC9C,eAAY,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3D,OAAI,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;AAC1B,OAAI,EAAE,IAAI,EAAE,CAAC,UAAU,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;AACxD,QAAI,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AACvC,SAAI,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;KACpB;IACD;GACE;;;QA3BQ,sBAAsB;GAAS,YAAY","file":"dna-attributes-component.next.js","sourcesContent":["'use strict';\n\nimport DNAComponent from 'dna-component.next.js'\n\n/**\n * Simple Custom Component with attributes watching and reflecting.\n */\nexport class DNAAttributesComponent extends DNAComponent {\n\t/**\n\t * On `created` callback, sync attributes with properties.\n\t */\n\tcreatedCallback() {\n\t\tDNAComponent.prototype.createdCallback.call(this);\n\t\tvar attributes = this.attributes || [];\n        for (let i = 0, len = attributes.length; i < len; i++) {\n            let attr = attributes[i];\n            this.attributeChangedCallback(attr.name, undefined, attr.value);\n        }\n\t}\n\t/**\n\t * On `attributeChanged` callback, sync attributes with properties.\n\t * @private\n\t * @param {String} attrName The changed attribute name.\n     * @param {*} oldVal The value of the attribute before the change.\n     * @param {*} newVal The value of the attribute after the change.\n\t */\n\tattributeChangedCallback(attr, oldVal, newVal) {\n\t\tDNAComponent.prototype.attributeChangedCallback.call(this);\n\t\tvar cl = this.constructor;\n\t\tif (cl && cl.attributes && Array.isArray(cl.attributes)) {\n\t\t\tif (cl.attributes.indexOf(attr) !== -1) {\n\t\t\t\tthis[attr] = newVal;\n\t\t\t}\n\t\t}\n    }\n}\n"]}