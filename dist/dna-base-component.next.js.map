{"version":3,"sources":["../src/dna-base-component.next.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;IAEP,gBAAgB;WAAhB,gBAAgB;;UAAhB,gBAAgB;wBAAhB,gBAAgB;;6BAAhB,gBAAgB;;;cAAhB,gBAAgB;;;;SAEH,2BAAU;;AAE3B,OAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;AAC7B,QAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC7C;;AAED,OAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;AAC9B,QAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,IAAI,EAAE,CAAC;IAC3D;AACD,OAAI,OAAO,IAAI,CAAC,OAAO,IAAI,UAAU,EAAE;AACtC,QAAI,CAAC,OAAO,MAAA,CAAZ,IAAI,YAAiB,CAAC;IACtB;GACE;;;;;SAEG,mBAAG,EACT;;;;;SAEkB,4BAAU;AAC5B,OAAI,OAAO,IAAI,CAAC,QAAQ,IAAI,UAAU,EAAE;AACvC,QAAI,CAAC,QAAQ,MAAA,CAAb,IAAI,YAAkB,CAAC;IACvB;GACE;;;;;SAEI,oBAAG,EACV;;;;;SAE0B,kCAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE;AACrD,OAAI,OAAO,IAAI,CAAC,gBAAgB,IAAI,UAAU,EAAE;AAC/C,QAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IAChD;GACE;;;;;SAEY,4BAAG,EAClB;;;;;SAEU,gBAAc;OAAb,GAAG,yDAAG,KAAK;;AACtB,OAAI,EAAE,GAAG,IAAI;OACZ,OAAO,GAAG;AACT,aAAS,EAAE,EAAE,CAAC,SAAS;IACvB,CAAC;AACH,OAAI,GAAG,EAAE;AACR,WAAO,WAAQ,GAAG,GAAG,CAAC;IACtB;AACD,OAAI,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC;AACzB,OAAI,CAAC,OAAO,EAAE;AACb,MAAE,CAAC,OAAO,GAAG,OAAO,GAAG,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;IAC3D;AACK,OAAI;AACT,YAAQ,CAAC,eAAe,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC,OAAM,EAAE,EAAE;;IAEX,SAAS;AACf,MAAE,CAAC,QAAQ,GAAG,gBAAgB,CAAC,WAAW,EAAE,CAAC;IACvC;GACP;;;;;SAEiB,uBAAG;AACpB,OAAI,GAAG,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AACpD,UAAO,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;GACnC;;;;;SAEsB,0BAAC,EAAE,EAAE;AAC3B,KAAE,CAAC,QAAQ,GAAG,gBAAgB,CAAC,WAAW,EAAE,CAAC;GAC7C;;;;;SAEiB,uBAAG;AACpB,OAAI,QAAQ,CAAC,aAAa,IAAI,QAAQ,CAAC,aAAa,CAAC,UAAU,EAAE;AAChE,WAAO,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACnE;GACD;;;;;SAEoB,wBAAC,EAAE,EAAE;AACzB,UAAO,EAAE,CAAC,IAAI,CACX,OAAO,CAAC,QAAQ,EAAE,UAAU,KAAK,EAAE;AACnC,WAAO,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;IACjC,CAAC,CACD,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;GACtB;;;QA/EI,gBAAgB;GAAS,WAAW","file":"dna-base-component.next.js","sourcesContent":["'use strict';\n\nclass DNABaseComponent extends HTMLElement {\n    // Fires when an instance of the element is created.\n    createdCallback(...args) {\n\t\t// Add scope style class\n\t\tif (this.constructor.tagName) {\n\t\t\tthis.classList.add(this.constructor.tagName);\n\t\t}\n\t\t// Render the template\n\t\tif (this.constructor.template) {\n\t\t\tthis.innerHTML = this.constructor.template.innerHTML || '';\n\t\t}\n\t\tif (typeof this.created == 'function') {\n\t\t\tthis.created(...args);\n\t\t}\n    }\n\t// Abstract `created` callback. Extend in your component!\n\tcreated() {\n\t}\n    // Fires when an instance was inserted into the document.\n    attachedCallback(...args) {\n\t\tif (typeof this.attached == 'function') {\n\t\t\tthis.attached(...args);\n\t\t}\n    }\n\t// Abstract `attached` callback. Extend in your component!\n\tattached() {\n\t}\n    // Fires when an attribute was added, removed, or updated.\n    attributeChangedCallback(attrName, oldVal, newVal) {\n\t\tif (typeof this.attributeChanged == 'function') {\n\t\t\tthis.attributeChanged(attrName, oldVal, newVal);\n\t\t}\n    }\n\t// Abstract `attributeChanged` callback. Extend in your component!\n\tattributeChanged() {\n\t}\n\t// Register the custom element\n\tstatic init(ext = false) {\n\t\tlet fn = this,\n\t\t\toptions = {\n\t\t\t\tprototype: fn.prototype,\n\t\t\t};\n\t\tif (ext) {\n\t\t\toptions.extends = ext;\n\t\t}\n\t\tvar tagName = fn.tagName;\n\t\tif (!tagName) {\n\t\t\tfn.tagName = tagName = DNABaseComponent.classToElement(fn);\n\t\t}\n        try {\n\t\t\tdocument.registerElement(tagName, options);\n        } catch(ex) {\n            //\n        } finally {\n\t\t\tfn.template = DNABaseComponent.getTemplate();\n        }\n\t}\n\t// Instance an element\n\tstatic instantiate() {\n\t\tvar tag = this.tagName || this.classToElement(this);\n\t\treturn document.createElement(tag);\n\t}\n\t// Register current component template\n\tstatic registerTemplate(fn) {\n\t\tfn.template = DNABaseComponent.getTemplate();\n\t}\n\t// Get current component template\n\tstatic getTemplate() {\n\t\tif (document.currentScript && document.currentScript.parentNode) {\n\t\t\treturn document.currentScript.parentNode.querySelector('template');\n\t\t}\n\t}\n\t// convert Class name to HTML tag\n\tstatic classToElement(fn) {\n\t\treturn fn.name\n\t\t\t\t.replace(/[A-Z]/g, function (match) {\n\t\t\t\t\treturn '-' + match.toLowerCase();\n\t\t\t\t})\n\t\t\t\t.replace(/^\\-/, '');\n\t}\n}\n"]}