{"version":3,"sources":["../src/dna-component.next.js"],"names":[],"mappings":"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","file":"dna-component.next.js","sourcesContent":["'use strict';\n\n// shim for Safari\n// https://github.com/babel/babel/issues/1548\n// https://bugs.webkit.org/show_bug.cgi?id=114457\nif (typeof HTMLElement !== 'function') {\n    var _HTMLElement = function() {};\n    _HTMLElement.prototype = HTMLElement.prototype;\n    HTMLElement = _HTMLElement;\n}\n\n/**\n * This is the model to use to create DNA Custom Components.\n */\nclass DNAComponent extends HTMLElement {\n    /**\n     * Fires when an instance of the element is created.\n     */\n    createdCallback(...args) {\n            //\n        }\n        /**\n         * Fires when an instance was inserted into the document.\n         */\n    attachedCallback(...args) {\n            //\n        }\n        /**\n         * Fires when an attribute was added, removed, or updated.\n         * @param {String} attrName The changed attribute name.\n         * @param {*} oldVal The value of the attribute before the change.\n         * @param {*} newVal The value of the attribute after the change.\n         */\n    attributeChangedCallback(attrName, oldVal, newVal) {\n            //\n        }\n        /**\n         * The tag name of the custom element.\n         * @type {String}\n         */\n    static get tagName() {\n        return this._tagName || DNAComponent.classToElement(this);\n    }\n    static set tagName(tag) {\n            if (typeof tag == 'string') {\n                this._tagName = tag;\n            }\n        }\n        /**\n         * Register the custom element.\n         * @param {String} ext The name of an Element to extend (optional).\n         */\n    static init(ext = false) {\n        if (this.register(this, ext)) {\n            this.template = this.getTemplate();\n        }\n    }\n    static register(fn, ext, tagName) {\n            tagName = tagName || fn.tagName || DNAComponent.classToElement(fn);\n            let options = {\n                prototype: fn.prototype,\n            };\n            if (ext) {\n                options.extends = ext;\n            }\n            // Retrieve the Custom Element tag name.\n            try {\n                var ctr = window[DNAComponent.elementToClass(tagName)] = document.registerElement(tagName, options);\n                ctr.tagName = tagName;\n            } catch (ex) {\n                return false;\n            } finally {\n                return true;\n            }\n        }\n        /**\n         * Instantiate an element.\n         * This is a sort of constructor.\n         */\n    static instantiate() {\n            var tag = this.tagName || this.classToElement(this);\n            return document.createElement(tag);\n        }\n        /**\n         * Get current component template.\n         * Uses `document.currentScript`, so use only on initialization!\n         * @return {HTMLTemplateElement} The template element of the component.\n         */\n    static getTemplate() {\n            if (document.currentScript && document.currentScript.parentNode) {\n                return document.currentScript.parentNode.querySelector('template');\n            }\n        }\n        /**\n         * Convert a Class name into HTML tag.\n         * @param {Class} fn Grab the tag name from this class.\n         * @return {String} The tag name for the Custom Element.\n         */\n    static classToElement(fn) {\n            return fn.name\n                .replace(/[A-Z]/g, function(match) {\n                    return '-' + match.toLowerCase();\n                })\n                .replace(/^\\-/, '');\n        }\n        /**\n         * Convert a HTML tag into a Class name.\n         * @param {Class} fn Grab the class name from this tag.\n         * @return {String} The class name for the Custom Element.\n         */\n    static elementToClass(tag) {\n        return tag\n            .replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function(match, index) {\n                if (+match === 0) return '';\n                return match.toUpperCase();\n            })\n            .replace(/[\\-|\\_]/g, '');\n    }\n}\n"]}