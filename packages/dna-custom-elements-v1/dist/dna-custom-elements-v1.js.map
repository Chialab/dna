{"version":3,"file":"dna-custom-elements-v1.js","sources":["node_modules/@dnajs/core/src/lib/typeof.js","node_modules/@dnajs/core/src/lib/dispatch.js","node_modules/@dnajs/core/src/lib/property.js","node_modules/@dnajs/core/src/mixins/properties-component.js","node_modules/@dnajs/core/src/lib/style.js","packages/dna-custom-elements-v1/src/lib/shim.js","packages/dna-custom-elements-v1/index.js","node_modules/@dnajs/core/src/polyfills/custom-event.js","node_modules/@dnajs/core/src/lib/registry.js","node_modules/@dnajs/core/src/mixins/component.js","node_modules/@dnajs/core/src/polyfills/matches.js","node_modules/@dnajs/core/src/mixins/events-component.js","node_modules/@dnajs/core/src/mixins/style-component.js","node_modules/@dnajs/core/src/mixins/template-component.js","node_modules/@dnajs/core/src/polyfills/reduce.js","node_modules/@dnajs/core/src/lib/mixins.js","node_modules/@dnajs/core/src/library-helpers.js"],"sourcesContent":["export function isFunction(fn) {\n    return typeof fn === 'function';\n}\n\nexport function isString(str) {\n    return typeof str === 'string';\n}\n\nexport function isObject(obj) {\n    return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isUndefined(obj) {\n    return typeof obj === 'undefined';\n}\n\nexport function isArray(obj) {\n    return Array.isArray(obj);\n}\n","import { isString } from './typeof.js';\nimport { CustomEvent } from '../polyfills/custom-event.js';\n\nexport function dispatch(node, evName, data, bubbles = true, cancelable = true) {\n    if (!isString(evName)) {\n        throw new TypeError('Event name is undefined');\n    }\n    let ev = new CustomEvent(evName, {\n        detail: data,\n        bubbles,\n        cancelable,\n    });\n    return node.dispatchEvent(ev);\n}\n","import { isUndefined, isFunction, isArray, isObject, isString } from './typeof.js';\n\nconst define = Object.defineProperty;\n\nclass Property {\n    constructor(ctrs) {\n        this._ = [];\n        ctrs = ctrs || [];\n        if (!isArray(ctrs)) {\n            ctrs = [ctrs];\n        }\n        this.ctrs = ctrs;\n        this.validator = () => true;\n        this._setter = (val) => val;\n        this.getterFn = () => this.value;\n        this.setterFn = (val) => {\n            val = this._setter(val);\n            if ((val === null || val === undefined) ||\n                this.validateType(val) && this.validator(val)) {\n                let oldValue = this.value;\n                if (oldValue !== val) {\n                    this.value = val;\n                    this.changed(val, oldValue);\n                }\n            } else {\n                // eslint-disable-next-line\n                throw new TypeError(\n                    `Invalid \\`${val}\\` value for \\`${this.name}\\` property for \\`${this.scope.is}\\`.`\n                );\n            }\n        };\n    }\n\n    observe(fn) {\n        if (isFunction(fn) || isString(fn)) {\n            this._.push(fn);\n        }\n        return this;\n    }\n\n    unobserve(fn) {\n        let io = this._.indexOf(fn);\n        if (io !== -1) {\n            this._.splice(io, 1);\n        }\n        return this;\n    }\n\n    changed(newValue, oldValue) {\n        for (let i = 0, len = this._.length; i < len; i++) {\n            let clb = this._[i];\n            if (isString(clb)) {\n                this.scope[clb].call(this.scope, this, newValue, oldValue);\n            } else {\n                clb(this, newValue, oldValue);\n            }\n        }\n    }\n\n    accepts(Ctr) {\n        return this.ctrs.indexOf(Ctr) !== -1;\n    }\n\n    named(name) {\n        this.name = name;\n        if (this.attrRequested === true) {\n            this.attrName = this.name;\n        }\n        return this;\n    }\n\n    default(initValue) {\n        this.defaultValue = isObject(initValue) ?\n            Object.freeze(initValue) :\n            initValue;\n        return this;\n    }\n\n    attribute(attrName = true) {\n        if (isString(attrName)) {\n            this.attrRequested = false;\n            this.attrName = attrName;\n        } else {\n            this.attrRequested = !!attrName;\n            this.attrName = this.name;\n        }\n        return this;\n    }\n\n    dispatch(evName) {\n        this.eventName = evName;\n        return this;\n    }\n\n    getter(callback) {\n        if (isFunction(callback)) {\n            this.getterFn = () => callback(this.value);\n        }\n        return this;\n    }\n\n    setter(callback) {\n        if (isFunction(callback)) {\n            this._setter = callback;\n        }\n        return this;\n    }\n\n    validate(callback) {\n        if (isFunction(callback)) {\n            this.validator = callback;\n        }\n        return this;\n    }\n\n    validateType(val) {\n        let i = 0;\n        let ctrs = this.ctrs;\n        if (ctrs.length === 0) {\n            return true;\n        }\n        while (i < ctrs.length) {\n            if (val instanceof ctrs[i] || (\n                val.constructor && val.constructor === ctrs[i]\n            )) {\n                return true;\n            }\n            i++;\n        }\n        return false;\n    }\n\n    init(scope) {\n        this.scope = scope;\n        define(scope, this.name, {\n            get: this.getterFn.bind(this),\n            set: this.setterFn.bind(this),\n            configurable: true,\n        });\n        if (!isUndefined(this.defaultValue)) {\n            scope[this.name] = this.defaultValue;\n        }\n    }\n}\n\nexport function prop(ctrs) {\n    if (ctrs instanceof Property) {\n        return ctrs;\n    }\n    return new Property(ctrs);\n}\n\ndefine(prop, 'ANY', { get() { return prop(); } });\ndefine(prop, 'STRING', { get() { return prop(String); } });\ndefine(prop, 'BOOLEAN', { get() { return prop(Boolean); } });\ndefine(prop, 'NUMBER', { get() { return prop(Number); } });\n","import { isArray } from '../lib/typeof.js';\nimport { dispatch } from '../lib/dispatch.js';\nimport { isUndefined } from '../lib/typeof.js';\nimport { prop } from '../lib/property.js';\n\nfunction getValue(property, attrVal) {\n    if (attrVal === '' && property.accepts(Boolean)) {\n        return true;\n    }\n    if (!property.accepts(String)) {\n        try {\n            return JSON.parse(attrVal);\n        } catch (ex) {\n            //\n        }\n    }\n    return attrVal;\n}\n\nfunction setAttribute(context, attr, value) {\n    let currentAttrValue = context.getAttribute(attr);\n    if (currentAttrValue !== value) {\n        if (value !== null && value !== undefined && value !== false) {\n            switch (typeof value) {\n            case 'string':\n            case 'number':\n                context.setAttribute(attr, value);\n                break;\n            case 'boolean':\n                context.setAttribute(attr, '');\n            }\n        } else if (currentAttrValue !== null) {\n            context.removeAttribute(attr);\n        }\n    }\n}\n\n/**\n * Simple Custom Component for properties initialization via attributes.\n *\n * @example\n * my-component.js\n * ```js\n * import { Component, PropertiesMixin, mix } from 'dna/component';\n * export class MyComponent extends mix(Component).with(PropertiesMixin) {\n *   get properties() {\n *     return { name: String };\n *   }\n * }\n * ```\n * app.js\n * ```js\n * import { define } from 'dna/component';\n * import { MyComponent } from './components/my-component/my-component.js';\n * define('my-component', MyComponent);\n * var temp = document.createElement('div');\n * temp.innerHTML = '<my-component name=\"Albert\"></my-component>';\n * var element = temp.firstChild;\n * console.log(element.name); // logs \"Albert\"\n * ```\n */\nexport const PropertiesMixin = (SuperClass) => class extends SuperClass {\n    /**\n     * On `created` callback, apply attributes to properties.\n     */\n    constructor() {\n        super();\n        let props = this.properties;\n        if (props) {\n            if (!isArray(props)) {\n                props = [props];\n            }\n            props = props.reduce((res, partialProps) => {\n                for (let k in partialProps) {\n                    res[k] = prop(partialProps[k]);\n                }\n                return res;\n            }, {});\n        } else {\n            props = {};\n        }\n        Object.defineProperty(this, 'properties', {\n            value: props,\n            writable: false,\n            configurable: true,\n        });\n        let observed = this.constructor.observedAttributes || [];\n        for (let k in props) {\n            let prop = props[k];\n            prop.named(k).init(this);\n            let { attrName, eventName } = prop;\n            if (!attrName && observed.indexOf(k) !== -1) {\n                prop.attribute();\n                attrName = k;\n            }\n            if (attrName || eventName) {\n                prop.observe(() => {\n                    if (attrName) {\n                        setAttribute(this, attrName, this[prop.name]);\n                    }\n                    if (eventName) {\n                        dispatch(this, eventName);\n                    }\n                });\n            }\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        let props = this.properties;\n        for (let k in props) {\n            let prop = props[k];\n            let { attrName } = prop;\n            if (attrName) {\n                if (isUndefined(this[prop.name])) {\n                    if (this.hasAttribute(attrName)) {\n                        this[prop.name] = getValue(prop, this.getAttribute(attrName));\n                    }\n                } else {\n                    setAttribute(this, attrName, this[prop.name]);\n                }\n            }\n        }\n    }\n    /**\n     * On `attributeChanged` callback, sync attributes with properties.\n     * @param {String} attrName The changed attribute name.\n     * @param {*} oldVal The value of the attribute before the change.\n     * @param {*} newVal The value of the attribute after the change.\n     */\n    attributeChangedCallback(attr, oldVal, newVal) {\n        super.attributeChangedCallback(attr, oldVal, newVal);\n        let props = this.properties;\n        for (let k in props) {\n            let prop = props[k];\n            if (prop.attrName === attr) {\n                this[prop.name] = getValue(prop, newVal);\n                return;\n            }\n        }\n    }\n    /**\n     * Create a listener for node's property changes.\n     * @param {string} propName The property name to observe.\n     * @param {Function} callback The callback to fire.\n     * @return {Object} An object with `cancel` method.\n     */\n    observeProperty(propName, callback) {\n        this.properties[propName].observe(callback);\n    }\n    unobserveProperty(propName, callback) {\n        this.properties[propName].unobserve(callback);\n    }\n};\n","let doc = document;\n\nexport function createStyle(id) {\n    let styleElem = doc.createElement('style');\n    styleElem.type = 'text/css';\n    styleElem.setAttribute('id', `style-${id}`);\n    let head = doc.head;\n    /* istanbul ignore else */\n    if (head.firstElementChild) {\n        head.insertBefore(styleElem, head.firstElementChild);\n    } else {\n        head.appendChild(styleElem);\n    }\n    return styleElem;\n}\n","export function shim(Elem) {\n    const ShimElement = function() {\n        return Reflect.construct(Elem, [], this.constructor);\n    };\n\n    ShimElement.prototype = Object.create(Elem.prototype, {\n        constructor: {\n            value: ShimElement,\n            configurable: true,\n            writable: true,\n        },\n    });\n\n    return ShimElement;\n}\n","/**\n * DNA\n * (c) 2015-2016 Chialab (http://www.chialab.com) <dev@chialab.io>\n * http://dna.chialab.io\n *\n * Just another components pattern.\n * Use with Custom Elements spec.\n */\nimport { mix, MIXINS } from '@dnajs/core/src/library-helpers.js';\nimport { shim } from './src/lib/shim.js';\n\nexport { prop, HELPERS } from '@dnajs/core/src/library-helpers.js';\nexport { shim, mix, MIXINS };\nexport const registry = self.customElements;\nexport function define(...args) {\n    return registry.define(...args);\n}\nexport function render(node, Component, props = {}) {\n    let element = new Component();\n    for (let k in props) {\n        element[k] = props[k];\n    }\n    node.appendChild(element);\n    return element;\n}\n\nexport class BaseComponent extends mix(\n    shim(self.HTMLElement)\n).with(\n    MIXINS.ComponentMixin,\n    MIXINS.PropertiesMixin,\n    MIXINS.StyleMixin,\n    MIXINS.EventsMixin,\n    MIXINS.TemplateMixin\n) {}\n","let CustomEvent;\n\ntry {\n    // eslint-disable-next-line\n    let ev = new self.CustomEvent('test');\n    CustomEvent = self.CustomEvent;\n} catch(ex) {\n    CustomEvent = function(event, params) {\n        params = params || {\n            bubbles: false,\n            cancelable: false,\n            detail: undefined,\n        };\n        let evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return evt;\n    };\n    CustomEvent.prototype = self.CustomEvent.prototype;\n}\n\nexport { CustomEvent };\n","import { isFunction, isString } from './typeof.js';\n\nexport const registry = {\n    components: {},\n    define(name, Ctr, config = {}) {\n        this.components[name.toLowerCase()] = {\n            is: name,\n            Ctr,\n            config,\n        };\n    },\n    get(name) {\n        if (isString(name)) {\n            return this.components[name.toLowerCase()];\n        } else if (isFunction(name)) {\n            for (let k in this.components) {\n                let desc = this.components[k];\n                if (desc.Ctr === name) {\n                    return desc;\n                }\n            }\n        }\n    },\n};\n","export const ComponentMixin = (SuperClass) => class extends SuperClass {\n    get is() {\n        return this.getAttribute('is') || this.localName;\n    }\n    /**\n     * Fires when an instance was inserted into the document.\n     */\n    connectedCallback() {}\n    /**\n     * Fires when an instance was detached from the document.\n     */\n    disconnectedCallback() {}\n    /**\n     * Fires when an attribute was added, removed, or updated.\n     * @param {String} attrName The changed attribute name.\n     * @param {*} oldVal The value of the attribute before the change.\n     * @param {*} newVal The value of the attribute after the change.\n     */\n    attributeChangedCallback() {}\n};\n","const ELEM_PROTO = Element.prototype;\n\nexport const matches = ELEM_PROTO.matches ||\n    ELEM_PROTO.matchesSelector ||\n    ELEM_PROTO.mozMatchesSelector ||\n    ELEM_PROTO.msMatchesSelector ||\n    ELEM_PROTO.oMatchesSelector ||\n    ELEM_PROTO.webkitMatchesSelector;\n","import { isString, isFunction } from '../lib/typeof.js';\nimport { matches } from '../polyfills/matches.js';\nimport { dispatch } from '../lib/dispatch.js';\n\nconst SPLIT_SELECTOR = /([^\\s]+)(.*)?/;\n\n/**\n * Simple Custom Component with events delegation,\n * It also implement a `dispatchEvent` wrapper named `trigger`.\n *\n * @example\n * my-component.js\n * ```js\n * import { EventsMixin, Component, mix } from 'dna/component';\n * export class MyComponent extends mix(Component).with(EventsMixin) {\n *   get events() {\n *     return {\n *       'click button': 'onButtonClick'\n *     }\n *   }\n *   onButtonClick() {\n *     console.log('button clicked');\n *   }\n * }\n * ```\n * app.js\n * ```js\n * import { define } from 'dna/component';\n * import { MyComponent } from './components/my-component/my-component.js';\n * define('my-component', MyComponent);\n * var element = new MyComponent();\n * var button = document.createElement('button');\n * button.innerText = 'Click me';\n * element.appendChild(button);\n * button.click(); // logs \"button clicked\"\n * ```\n */\nexport const EventsMixin = (SuperClass) => class extends SuperClass {\n    /**\n     * Fires when an instance of the element is created.\n     */\n    constructor() {\n        super();\n        // bind events\n        let events = this.events || {};\n        for (let k in events) {\n            let callback = isString(events[k]) ?\n                this[events[k]] :\n                events[k];\n            if (isFunction(callback)) {\n                let rule = k.match(SPLIT_SELECTOR);\n                let evName = rule[1];\n                let selector = (rule[2] || '').trim();\n                if (selector) {\n                    this.delegate(evName, selector, callback);\n                } else {\n                    this.addEventListener(evName, (ev) => {\n                        callback.call(this, ev, this);\n                    });\n                }\n            } else {\n                throw new TypeError('Invalid callback for event.');\n            }\n        }\n    }\n    delegate(evName, selector, callback) {\n        this.addEventListener(evName, (event) => {\n            let target = event.target;\n            while (target && target !== this) {\n                if (matches.call(target, selector)) {\n                    callback.call(this, event, target);\n                }\n                target = target.parentNode;\n            }\n        });\n    }\n    /**\n     * `Node.prototype.dispatchEvent` wrapper.\n     * @param {String} evName The name of the event to fire.\n     * @param {Object} data A set of custom data to pass to the event.\n     * @param {Boolean} bubbles Should the event bubble throw the DOM tree.\n     * @param {Boolean} cancelable Can be the event cancel by a callback.\n     */\n    trigger(evName, data, bubbles = true, cancelable = true) {\n        return dispatch(this, evName, data, bubbles, cancelable);\n    }\n};\n","import { isString } from '../lib/typeof.js';\nimport { createStyle } from '../lib/style.js';\n\n/**\n * Simple Custom Component with css style handling using the `css` property.\n *\n * @example\n * my-component.js\n * ```js\n * import { StyleMixin, Component, mix } from 'dna/component';\n * export class MyComponent extends mix(Component).with(StyleMixin) {\n *   get css() {\n *     return '.my-component p { color: red; }'\n *   }\n * }\n * ```\n * app.js\n * ```js\n * import { define } from 'dna/component';\n * import { MyComponent } from './components/my-component/my-component.js';\n * define('my-component', MyComponent);\n * var element = new MyComponent();\n * var p = document.createElement('p');\n * p.innerText = 'Paragraph';\n * element.appendChild(p); // text inside `p` gets the red color\n * ```\n */\nexport const StyleMixin = (SuperClass) => class extends SuperClass {\n    /**\n     * Fires when an instance of the element is created.\n     */\n    constructor() {\n        super();\n        if (!this.constructor.styleElem) {\n            let Ctr = this.constructor;\n            Object.defineProperty(Ctr, 'styleElem', {\n                value: createStyle(this.is),\n            });\n        }\n        this.updateCSS();\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n        this.classList.add(this.is);\n    }\n\n    updateCSS() {\n        let style = this.css;\n        if (isString(style)) {\n            this.constructor.styleElem.textContent = style;\n        }\n    }\n};\n","import { isFunction, isString } from '../lib/typeof.js';\n\n/**\n * Simple Custom Component with template handling using the `template` property.\n *\n * @example\n * my-component.js\n * ```js\n * import { Component, TemplateMixin, mix } from 'dna/component';\n * export class MyComponent extends mix(Component).with(TemplateMixin) {\n *   get template() {\n *     return '<h1>${this.name}</h1>';\n *   }\n *   get name() {\n *     return 'Newton';\n *   }\n * }\n * ```\n * app.js\n * ```js\n * import { define } from 'dna/component';\n * import { MyComponent } from './components/my-component/my-component.js';\n * define('my-component', MyComponent);\n * var element = new MyComponent();\n * console.log(element.innerHTML); // logs \"<h1>Newton</h1>\"\n * ```\n */\nexport const TemplateMixin = (SuperClass) => class extends SuperClass {\n    constructor() {\n        super();\n        if (this.template) {\n            let props = this.properties;\n            if (props) {\n                let callback = () => {\n                    this.render();\n                };\n                for (let k in props) {\n                    props[k].observe(callback);\n                }\n            }\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        if (this.template) {\n            this.render();\n        }\n    }\n    /**\n     * Update Component child nodes.\n     */\n    render(tpl) {\n        tpl = tpl || this.template;\n        /* istanbul ignore else */\n        if (isFunction(tpl)) {\n            tpl();\n        } else if (isString(tpl)) {\n            this.innerHTML = tpl;\n        } else {\n            throw new Error('Invalid template property.');\n        }\n    }\n};\n","/* eslint-disable prefer-rest-params */\nexport const reduce = Array.prototype.reduce || function(callback /*, initialValue*/ ) {\n    'use strict';\n    let t = this;\n    let len = t.length;\n    let k = 0;\n    let value;\n    if (arguments.length === 2) {\n        value = arguments[1];\n    } else {\n        while (k < len && !(k in t)) {\n            k++;\n        }\n        value = t[k++];\n    }\n    for (; k < len; k++) {\n        if (k in t) {\n            value = callback(value, t[k], k, t);\n        }\n    }\n    return value;\n};\n","import { reduce } from '../polyfills/reduce.js';\n/**\n * @author Justin Fagnani\n * @see https://github.com/justinfagnani/mixwith.js\n */\nclass Mixin {\n    constructor(superclass) {\n        superclass = superclass || class {};\n        this.superclass = superclass;\n    }\n\n    with() {\n        // eslint-disable-next-line\n        let args = [].slice.call(arguments, 0);\n        return reduce.call(args, (c, mixin) => mixin(c), this.superclass);\n    }\n}\n\nexport const mix = (superClass) => new Mixin(superClass);\n","import { dispatch } from './lib/dispatch.js';\nimport * as DOM_HELPERS from './lib/nodes.js';\nimport { ComponentMixin } from './mixins/component.js';\nimport { PropertiesMixin } from './mixins/properties-component.js';\nimport { EventsMixin } from './mixins/events-component.js';\nimport { StyleMixin } from './mixins/style-component.js';\nimport { TemplateMixin } from './mixins/template-component.js';\n\nexport const DOM = DOM_HELPERS;\nexport const MIXINS = {\n    ComponentMixin,\n    PropertiesMixin,\n    EventsMixin,\n    StyleMixin,\n    TemplateMixin,\n};\nexport const HELPERS = {\n    dispatch,\n};\nexport { mix } from './lib/mixins.js';\nexport { prop } from './lib/property.js';\nexport { shim } from './lib/shim.js';\nexport * from './lib/typeof.js';\n"],"names":["isFunction","fn","isString","str","isObject","obj","Object","prototype","toString","call","isUndefined","isArray","Array","dispatch","node","evName","data","bubbles","cancelable","TypeError","ev","CustomEvent","dispatchEvent","prop","ctrs","Property","getValue","property","attrVal","accepts","Boolean","String","JSON","parse","ex","setAttribute","context","attr","value","currentAttrValue","getAttribute","undefined","removeAttribute","createStyle","id","styleElem","doc","createElement","type","head","firstElementChild","insertBefore","appendChild","shim","Elem","ShimElement","Reflect","construct","this","constructor","create","define","registry","render","Component","props","element","k","self","event","params","evt","document","createEvent","initCustomEvent","detail","ComponentMixin","SuperClass","connectedCallback","disconnectedCallback","attributeChangedCallback","localName","defineProperty","_","validator","_setter","val","getterFn","_this","setterFn","validateType","name","scope","is","oldValue","changed","observe","push","unobserve","io","indexOf","splice","newValue","i","len","length","clb","Ctr","named","attrRequested","attrName","default","initValue","defaultValue","freeze","attribute","eventName","getter","callback","_this2","setter","validate","init","bind","Number","PropertiesMixin","_SuperClass","properties","reduce","res","partialProps","observed","observedAttributes","hasAttribute","oldVal","newVal","observeProperty","propName","unobserveProperty","ELEM_PROTO","Element","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","SPLIT_SELECTOR","EventsMixin","events","rule","match","selector","trim","delegate","addEventListener","target","parentNode","trigger","StyleMixin","updateCSS","classList","add","style","css","textContent","TemplateMixin","template","tpl","Error","innerHTML","t","arguments","Mixin","superclass","with","args","slice","c","mixin","mix","superClass","MIXINS","HELPERS","customElements","BaseComponent","HTMLElement"],"mappings":"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"}