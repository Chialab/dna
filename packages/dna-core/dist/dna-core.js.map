{"version":3,"file":"dna-core.js","sources":["packages/dna-core/src/lib/typeof.js","packages/dna-core/src/lib/dispatch.js","packages/dna-core/src/lib/nodes.js","packages/dna-core/src/lib/property.js","packages/dna-core/src/mixins/properties-component.js","packages/dna-core/src/lib/style.js","packages/dna-core/src/lib/shim.js","packages/dna-core/index.js","packages/dna-core/src/polyfills/custom-event.js","packages/dna-core/src/lib/registry.js","packages/dna-core/src/mixins/component.js","packages/dna-core/src/polyfills/matches.js","packages/dna-core/src/mixins/events-component.js","packages/dna-core/src/mixins/style-component.js","packages/dna-core/src/mixins/template-component.js","packages/dna-core/src/polyfills/reduce.js","packages/dna-core/src/lib/mixins.js","packages/dna-core/src/library-helpers.js"],"sourcesContent":["export function isFunction(fn) {\n    return typeof fn === 'function';\n}\n\nexport function isString(str) {\n    return typeof str === 'string';\n}\n\nexport function isObject(obj) {\n    return typeof obj === 'object';\n}\n\nexport function isUndefined(obj) {\n    return typeof obj === 'undefined';\n}\n\nexport function isArray(obj) {\n    return Array.isArray(obj);\n}\n","import { isString } from './typeof.js';\nimport { CustomEvent } from '../polyfills/custom-event.js';\n\nexport function dispatch(node, evName, data, bubbles = true, cancelable = true) {\n    if (!isString(evName)) {\n        throw new TypeError('Event name is undefined');\n    }\n    let ev = new CustomEvent(evName, {\n        detail: data,\n        bubbles,\n        cancelable,\n    });\n    return node.dispatchEvent(ev);\n}\n","import { isFunction } from './typeof.js';\nimport { registry } from './registry.js';\n\nconst CONNECTED = 'connectedCallback';\nconst DISCONNECTED = 'disconnectedCallback';\nconst UPDATED = 'attributeChangedCallback';\n\nexport function getComponent(node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n        let is = node.getAttribute('is') || node.tagName;\n        return registry.get(is);\n    }\n    return registry.get(node);\n}\n\nexport function connect(node) {\n    if (isFunction(node[CONNECTED])) {\n        node[CONNECTED].call(node);\n        return true;\n    }\n    return false;\n}\n\nexport function disconnect(node) {\n    if (isFunction(node[DISCONNECTED])) {\n        node[DISCONNECTED].call(node);\n        return true;\n    }\n    return false;\n}\n\nexport function update(node, name, oldValue, newValue) {\n    if (isFunction(node[UPDATED]) && name !== 'is') {\n        node[UPDATED].call(node, name, oldValue, newValue);\n        return true;\n    }\n    return false;\n}\n\nexport function bind(node, Ctr) {\n    Ctr = Ctr || getComponent(node).Ctr;\n    node.__proto__ = Ctr.prototype;\n    Object.defineProperty(node, 'constructor', {\n        value: Ctr,\n        configurable: true,\n        writable: true,\n    });\n    Ctr.call(node);\n}\n\nexport function create(node, descriptor) {\n    descriptor = descriptor || getComponent(node);\n    if (descriptor) {\n        bind(node, descriptor.Ctr);\n        return true;\n    }\n    return false;\n}\n\nexport function createElement(is) {\n    let descriptor = getComponent(is);\n    if (descriptor) {\n        return new descriptor.Ctr();\n    }\n}\n\nexport function appendChild(parent, node) {\n    if (parent !== node.parentNode || parent.lastElementChild !== node) {\n        if (node.parentNode) {\n            removeChild(node.parentNode, node);\n        }\n        parent.appendChild(node);\n        return connect(node);\n    }\n    return false;\n}\n\nexport function removeChild(parent, node) {\n    parent.removeChild(node);\n    return disconnect(node);\n}\n\nexport function insertBefore(parent, node, refNode) {\n    parent.insertBefore(node, refNode);\n    return connect(node);\n}\n\nexport function replaceChild(parent, node, refNode) {\n    parent.replaceChild(node, refNode);\n    disconnect(refNode);\n    return connect(node);\n}\n\nexport function setAttribute(node, name, value) {\n    let oldValue = node.getAttribute(name);\n    node.setAttribute(name, value);\n    let attrs = node.constructor.observedAttributes || [];\n    if (attrs.indexOf(name) !== -1) {\n        update(node, name, oldValue, value);\n        return true;\n    }\n    return false;\n}\n\nexport function removeAttribute(node, name) {\n    let oldValue = node.getAttribute(name);\n    node.removeAttribute(name);\n    let attrs = node.constructor.observedAttributes || [];\n    if (attrs.indexOf(name) !== -1) {\n        update(node, name, oldValue, null);\n        return true;\n    }\n    return false;\n}\n","import { isUndefined, isFunction, isArray, isObject, isString } from './typeof.js';\n\nconst define = Object.defineProperty;\n\nclass Property {\n    constructor(ctrs) {\n        this._ = [];\n        ctrs = ctrs || [];\n        if (!isArray(ctrs)) {\n            ctrs = [ctrs];\n        }\n        this.ctrs = ctrs;\n        this.validator = () => true;\n        this._setter = (val) => val;\n        this.getterFn = () => this.value;\n        this.setterFn = (val) => {\n            val = this._setter(val);\n            if (this.validateType(val)) {\n                if (this.validator(val)) {\n                    let oldValue = this.value;\n                    if (oldValue !== val) {\n                        this.value = val;\n                        this.changed(val, oldValue);\n                    }\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    observe(fn) {\n        if (isFunction(fn) || isString(fn)) {\n            this._.push(fn);\n        }\n        return this;\n    }\n\n    unobserve(fn) {\n        let io = this._.indexOf(fn);\n        if (io !== -1) {\n            this._.splice(io, 1);\n        }\n        return this;\n    }\n\n    changed(newValue, oldValue) {\n        for (let i = 0, len = this._.length; i < len; i++) {\n            let clb = this._[i];\n            if (isString(clb)) {\n                this.scope[clb].call(this.scope, this, newValue, oldValue);\n            } else {\n                clb(this, newValue, oldValue);\n            }\n        }\n    }\n\n    accepts(Ctr) {\n        return this.ctrs.indexOf(Ctr) !== -1;\n    }\n\n    named(name) {\n        this.name = name;\n        if (this.attrRequested === true) {\n            this.attrName = this.name;\n        }\n        return this;\n    }\n\n    default(initValue) {\n        this.defaultValue = isObject(initValue) ?\n            Object.freeze(initValue) :\n            initValue;\n        return this;\n    }\n\n    attribute(attrName = true) {\n        if (isString(attrName)) {\n            this.attrRequested = false;\n            this.attrName = attrName;\n        } else {\n            this.attrRequested = !!attrName;\n        }\n        return this;\n    }\n\n    dispatch(evName) {\n        this.eventName = evName;\n        return this;\n    }\n\n    getter(callback) {\n        if (isFunction(callback)) {\n            this.getterFn = () => callback(this.value);\n        }\n        return this;\n    }\n\n    setter(callback) {\n        if (isFunction(callback)) {\n            this._setter = callback;\n        }\n        return this;\n    }\n\n    validate(callback) {\n        if (isFunction(callback)) {\n            this.validator = callback;\n        }\n        return this;\n    }\n\n    validateType(val) {\n        if (val === null || val === undefined) {\n            return true;\n        }\n        let i = 0;\n        let ctrs = this.ctrs;\n        if (ctrs.length === 0) {\n            return true;\n        }\n        while (i < ctrs.length) {\n            if (val instanceof ctrs[i] || (\n                val.constructor && val.constructor === ctrs[i]\n            )) {\n                return true;\n            }\n            i++;\n        }\n        // eslint-disable-next-line\n        throw new TypeError(\n            `Invalid \\`${val}\\` value for \"${this.name}\" property${this.scope ? ` for ${this.scope.is}` : ''}.`\n        );\n    }\n\n    init(scope) {\n        this.scope = scope;\n        define(scope, this.name, {\n            get: this.getterFn.bind(this),\n            set: this.setterFn.bind(this),\n            configurable: true,\n        });\n        if (!isUndefined(this.defaultValue)) {\n            this.setter(this.defaultValue);\n        }\n    }\n}\n\nexport function prop(ctrs) {\n    if (ctrs instanceof Property) {\n        return ctrs;\n    }\n    return new Property(ctrs);\n}\n\ndefine(prop, 'ANY', { get() { return prop(); } });\ndefine(prop, 'STRING', { get() { return prop(String); } });\ndefine(prop, 'BOOLEAN', { get() { return prop(Boolean); } });\ndefine(prop, 'NUMBER', { get() { return prop(Number); } });\n","import { isArray } from '../lib/typeof.js';\nimport { dispatch } from '../lib/dispatch.js';\nimport { isUndefined } from '../lib/typeof.js';\nimport { prop } from '../lib/property.js';\n\nfunction getValue(property, attrVal) {\n    if (attrVal === '' && property.accepts(Boolean)) {\n        return true;\n    }\n    if (!property.accepts(String)) {\n        try {\n            return JSON.parse(attrVal);\n        } catch (ex) {\n            //\n        }\n    }\n    return attrVal;\n}\n\nfunction setAttribute(context, attr, value) {\n    let currentAttrValue = context.getAttribute(attr);\n    if (currentAttrValue !== value) {\n        if (value !== null && value !== undefined && value !== false) {\n            switch (typeof value) {\n            case 'string':\n            case 'number':\n                context.setAttribute(attr, value);\n                break;\n            case 'boolean':\n                context.setAttribute(attr, '');\n            }\n        } else if (currentAttrValue !== null) {\n            context.removeAttribute(attr);\n        }\n    }\n}\n\n/**\n * Simple Custom Component for properties initialization via attributes.\n *\n * @example\n * my-component.js\n * ```js\n * import { Component, PropertiesMixin, mix } from 'dna/component';\n * export class MyComponent extends mix(Component).with(PropertiesMixin) {\n *   get properties() {\n *     return { name: String };\n *   }\n * }\n * ```\n * app.js\n * ```js\n * import { define } from 'dna/component';\n * import { MyComponent } from './components/my-component/my-component.js';\n * define('my-component', MyComponent);\n * var temp = document.createElement('div');\n * temp.innerHTML = '<my-component name=\"Albert\"></my-component>';\n * var element = temp.firstChild;\n * console.log(element.name); // logs \"Albert\"\n * ```\n */\nexport const PropertiesMixin = (SuperClass) => class extends SuperClass {\n    /**\n     * On `created` callback, apply attributes to properties.\n     */\n    constructor() {\n        super();\n        let props = this.properties;\n        if (props) {\n            if (!isArray(props)) {\n                props = [props];\n            }\n            props = props.reduce((res, partialProps) => {\n                for (let k in partialProps) {\n                    res[k] = prop(partialProps[k]);\n                }\n                return res;\n            }, {});\n        } else {\n            props = {};\n        }\n        Object.defineProperty(this, 'properties', {\n            value: props,\n            writable: false,\n            configurable: true,\n        });\n        for (let k in props) {\n            let prop = props[k];\n            prop.named(k).init(this);\n            let { attrName, eventName } = prop;\n            if (attrName || eventName) {\n                prop.observe(() => {\n                    if (attrName) {\n                        setAttribute(this, attrName, this[prop.name]);\n                    }\n                    if (eventName) {\n                        dispatch(this, eventName);\n                    }\n                });\n            }\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        let props = this.properties;\n        for (let k in props) {\n            let prop = props[k];\n            let { attrName } = prop;\n            if (attrName) {\n                if (isUndefined(this[prop.name])) {\n                    if (this.hasAttribute(attrName)) {\n                        this[prop.name] = getValue(prop, this.getAttribute(attrName));\n                    }\n                } else {\n                    setAttribute(this, attrName, this[prop.name]);\n                }\n            }\n        }\n    }\n    /**\n     * On `attributeChanged` callback, sync attributes with properties.\n     * @param {String} attrName The changed attribute name.\n     * @param {*} oldVal The value of the attribute before the change.\n     * @param {*} newVal The value of the attribute after the change.\n     */\n    attributeChangedCallback(attr, oldVal, newVal) {\n        super.attributeChangedCallback(attr, oldVal, newVal);\n        let props = this.properties;\n        for (let k in props) {\n            let prop = props[k];\n            if (prop.attrName === attr) {\n                this[prop.name] = getValue(prop, newVal);\n                return;\n            }\n        }\n    }\n    /**\n     * Create a listener for node's property changes.\n     * @param {string} propName The property name to observe.\n     * @param {Function} callback The callback to fire.\n     * @return {Object} An object with `cancel` method.\n     */\n    observeProperty(propName, callback) {\n        this.properties[propName].observe(callback);\n    }\n};\n","let doc = document;\n\nexport function createStyle(id) {\n    let styleElem = doc.createElement('style');\n    styleElem.type = 'text/css';\n    styleElem.setAttribute('id', `style-${id}`);\n    let head = doc.head;\n    if (head.firstElementChild) {\n        head.insertBefore(styleElem, head.firstElementChild);\n    } else {\n        head.appendChild(styleElem);\n    }\n    return styleElem;\n}\n\n/**\n * Add `<style>` tag for the component.\n * @param {String} styleElem The CSS style element.\n * @param {String} style A CSS string.\n * @return {HTMLStyleElement} the style tag created.\n */\nexport function importStyle(styleElem, style) {\n    if (style !== styleElem.textContent) {\n        styleElem.textContent = style;\n        return true;\n    }\n    return false;\n}\n","import { registry } from './registry.js';\nimport { isString } from './typeof.js';\n\nfunction isNew(node) {\n    try {\n        return !isString(node.outerHTML);\n    } catch (ex) {\n        return true;\n    }\n}\n\nexport function shim(Original) {\n    class Polyfilled {\n        constructor() {\n            if (!isNew(this)) {\n                return this;\n            }\n            let desc = registry.get(this.constructor);\n            let config = desc.config;\n            // Find the tagname of the constructor and create a new element with it\n            let element = document.createElement(\n                config.extends ? config.extends : desc.is\n            );\n            element.__proto__ = desc.Ctr.prototype;\n            if (config.extends) {\n                element.setAttribute('is', desc.is);\n            }\n            return element;\n        }\n    }\n    Polyfilled.prototype = Object.create(Original.prototype, {\n        constructor: {\n            value: Polyfilled,\n            configurable: true,\n            writable: true,\n        },\n    });\n    return Polyfilled;\n}\n","/**\n * DNA\n * (c) 2015-2016 Chialab (http://www.chialab.com) <dev@chialab.io>\n * http://dna.chialab.io\n *\n * Just another components pattern.\n * Use with Custom Elements specs.\n */\nimport { mix, prop, shim, HELPERS, DOM, MIXINS } from './src/library-helpers.js';\nimport { registry } from './src/lib/registry.js';\n\nexport { mix, prop, shim, HELPERS, DOM, MIXINS };\nexport { registry };\nexport function define(tagName, Component, config) {\n    return registry.define(tagName, Component, config);\n}\nexport function render(node, Component, props) {\n    let element = new Component();\n    for (let k in props) {\n        element[k] = props[k];\n    }\n    DOM.appendChild(node, element);\n    return element;\n}\n\n/**\n * Simple Custom Component with some behaviors.\n * @class BaseComponent\n * @extends HTMLElement\n *\n * @example\n * my-component.js\n * ```js\n * import { BaseComponent } from 'dna/component';\n * export class MyComponent extends BaseComponent {\n *   static get observedAttributes() {\n *     return ['...', '...'];\n *   }\n *   get css() {\n *     return '...';\n *   }\n *   get events() {\n *     return {\n *       '...': '...'\n *     };\n *   }\n *   get template() {\n *     return '...';\n *   }\n *   get properties() {\n *     return { ... };\n *   }\n * }\n */\nexport class BaseComponent extends mix(\n    shim(self.HTMLElement)\n).with(\n    MIXINS.ComponentMixin,\n    MIXINS.PropertiesMixin,\n    MIXINS.StyleMixin,\n    MIXINS.EventsMixin,\n    MIXINS.TemplateMixin\n) {}\n","let CustomEvent;\n\ntry {\n    // eslint-disable-next-line\n    let ev = new self.CustomEvent('test');\n    CustomEvent = self.CustomEvent;\n} catch(ex) {\n    CustomEvent = function(event, params) {\n        params = params || {\n            bubbles: false,\n            cancelable: false,\n            detail: undefined,\n        };\n        let evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return evt;\n    };\n    CustomEvent.prototype = self.CustomEvent.prototype;\n}\n\nexport { CustomEvent };\n","import { isFunction, isString } from './typeof.js';\n\nexport const registry = {\n    components: {},\n    define(name, Ctr, config = {}) {\n        this.components[name.toLowerCase()] = {\n            is: name,\n            Ctr,\n            config,\n        };\n    },\n    get(name) {\n        if (isString(name)) {\n            return this.components[name.toLowerCase()];\n        } else if (isFunction(name)) {\n            for (let k in this.components) {\n                let desc = this.components[k];\n                if (desc.Ctr === name) {\n                    return desc;\n                }\n            }\n        }\n    },\n};\n","export const ComponentMixin = (SuperClass) => class extends SuperClass {\n    get is() {\n        return this.getAttribute('is') || this.localName;\n    }\n    /**\n     * Fires when an instance was inserted into the document.\n     */\n    connectedCallback() {}\n    /**\n     * Fires when an instance was detached from the document.\n     */\n    disconnectedCallback() {}\n    /**\n     * Fires when an attribute was added, removed, or updated.\n     * @param {String} attrName The changed attribute name.\n     * @param {*} oldVal The value of the attribute before the change.\n     * @param {*} newVal The value of the attribute after the change.\n     */\n    attributeChangedCallback() {}\n};\n","const ELEM_PROTO = Element.prototype;\n\nexport const matches = ELEM_PROTO.matches ||\n    ELEM_PROTO.matchesSelector ||\n    ELEM_PROTO.mozMatchesSelector ||\n    ELEM_PROTO.msMatchesSelector ||\n    ELEM_PROTO.oMatchesSelector ||\n    ELEM_PROTO.webkitMatchesSelector;\n","import { isString, isFunction } from '../lib/typeof.js';\nimport { matches } from '../polyfills/matches.js';\nimport { dispatch } from '../lib/dispatch.js';\n\nconst SPLIT_SELECTOR = /([^\\s]+)(.*)?/;\n\n/**\n * Simple Custom Component with events delegation,\n * It also implement a `dispatchEvent` wrapper named `trigger`.\n *\n * @example\n * my-component.js\n * ```js\n * import { EventsMixin, Component, mix } from 'dna/component';\n * export class MyComponent extends mix(Component).with(EventsMixin) {\n *   get events() {\n *     return {\n *       'click button': 'onButtonClick'\n *     }\n *   }\n *   onButtonClick() {\n *     console.log('button clicked');\n *   }\n * }\n * ```\n * app.js\n * ```js\n * import { define } from 'dna/component';\n * import { MyComponent } from './components/my-component/my-component.js';\n * define('my-component', MyComponent);\n * var element = new MyComponent();\n * var button = document.createElement('button');\n * button.innerText = 'Click me';\n * element.appendChild(button);\n * button.click(); // logs \"button clicked\"\n * ```\n */\nexport const EventsMixin = (SuperClass) => class extends SuperClass {\n    /**\n     * Fires when an instance of the element is created.\n     */\n    constructor() {\n        super();\n        // bind events\n        let events = this.events || {};\n        for (let k in events) {\n            let callback = isString(events[k]) ?\n                this[events[k]] :\n                events[k];\n            if (isFunction(callback)) {\n                let rule = k.match(SPLIT_SELECTOR);\n                let evName = rule[1];\n                let selector = (rule[2] || '').trim();\n                if (selector) {\n                    this.delegate(evName, selector, callback);\n                } else {\n                    this.addEventListener(evName, (ev) => {\n                        callback.call(this, ev, this);\n                    });\n                }\n            } else {\n                throw new TypeError('Invalid callback for event.');\n            }\n        }\n    }\n    delegate(evName, selector, callback) {\n        this.addEventListener(evName, (event) => {\n            let target = event.target;\n            while (target && target !== this) {\n                if (matches.call(target, selector)) {\n                    callback.call(this, event, target);\n                }\n                target = target.parentNode;\n            }\n        });\n    }\n    /**\n     * `Node.prototype.dispatchEvent` wrapper.\n     * @param {String} evName The name of the event to fire.\n     * @param {Object} data A set of custom data to pass to the event.\n     * @param {Boolean} bubbles Should the event bubble throw the DOM tree.\n     * @param {Boolean} cancelable Can be the event cancel by a callback.\n     */\n    trigger(evName, data, bubbles = true, cancelable = true) {\n        return dispatch(this, evName, data, bubbles, cancelable);\n    }\n};\n","import { createStyle, importStyle } from '../lib/style.js';\n\n/**\n * Simple Custom Component with css style handling using the `css` property.\n *\n * @example\n * my-component.js\n * ```js\n * import { StyleMixin, Component, mix } from 'dna/component';\n * export class MyComponent extends mix(Component).with(StyleMixin) {\n *   get css() {\n *     return '.my-component p { color: red; }'\n *   }\n * }\n * ```\n * app.js\n * ```js\n * import { define } from 'dna/component';\n * import { MyComponent } from './components/my-component/my-component.js';\n * define('my-component', MyComponent);\n * var element = new MyComponent();\n * var p = document.createElement('p');\n * p.innerText = 'Paragraph';\n * element.appendChild(p); // text inside `p` gets the red color\n * ```\n */\nexport const StyleMixin = (SuperClass) => class extends SuperClass {\n    /**\n     * Fires when an instance of the element is created.\n     */\n    constructor() {\n        super();\n        if (!this.styleElem) {\n            let Ctr = this.constructor;\n            Object.defineProperty(Ctr.prototype, 'styleElem', {\n                value: createStyle(this.is),\n            });\n        }\n        this.updateCSS();\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n        this.classList.add(this.is);\n    }\n\n    updateCSS() {\n        let style = this.css;\n        if (style) {\n            importStyle(this.styleElem, style);\n        }\n    }\n};\n","import { isFunction, isString } from '../lib/typeof.js';\n\n/**\n * Simple Custom Component with template handling using the `template` property.\n *\n * @example\n * my-component.js\n * ```js\n * import { Component, TemplateMixin, mix } from 'dna/component';\n * export class MyComponent extends mix(Component).with(TemplateMixin) {\n *   get template() {\n *     return '<h1>${this.name}</h1>';\n *   }\n *   get name() {\n *     return 'Newton';\n *   }\n * }\n * ```\n * app.js\n * ```js\n * import { define } from 'dna/component';\n * import { MyComponent } from './components/my-component/my-component.js';\n * define('my-component', MyComponent);\n * var element = new MyComponent();\n * console.log(element.innerHTML); // logs \"<h1>Newton</h1>\"\n * ```\n */\nexport const TemplateMixin = (SuperClass) => class extends SuperClass {\n    constructor() {\n        super();\n        if (this.template) {\n            let props = this.properties;\n            if (props) {\n                let callback = () => {\n                    this.render();\n                };\n                for (let k in props) {\n                    props[k].observe(callback);\n                }\n            }\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        if (this.template) {\n            this.render();\n        }\n    }\n    /**\n     * Update Component child nodes.\n     */\n    render() {\n        let tpl = this.template;\n        /* istanbul ignore else */\n        if (isFunction(tpl)) {\n            tpl();\n        } else if (isString(tpl)) {\n            this.innerHTML = tpl;\n        } else {\n            throw new Error('Invalid template property.');\n        }\n    }\n};\n","/* eslint-disable prefer-rest-params */\nexport const reduce = Array.prototype.reduce || function(callback /*, initialValue*/ ) {\n    'use strict';\n    let t = this;\n    let len = t.length;\n    let k = 0;\n    let value;\n    if (arguments.length === 2) {\n        value = arguments[1];\n    } else {\n        while (k < len && !(k in t)) {\n            k++;\n        }\n        value = t[k++];\n    }\n    for (; k < len; k++) {\n        if (k in t) {\n            value = callback(value, t[k], k, t);\n        }\n    }\n    return value;\n};\n","import { reduce } from '../polyfills/reduce.js';\n/**\n * @author Justin Fagnani\n * @see https://github.com/justinfagnani/mixwith.js\n */\nclass Mixin {\n    constructor(superclass) {\n        superclass = superclass || class {};\n        this.superclass = superclass;\n    }\n\n    with() {\n        // eslint-disable-next-line\n        let args = [].slice.call(arguments, 0);\n        return reduce.call(args, (c, mixin) => mixin(c), this.superclass);\n    }\n}\n\nexport const mix = (superClass) => new Mixin(superClass);\n","import { dispatch } from './lib/dispatch.js';\nimport * as DOM_HELPERS from './lib/nodes.js';\nimport { ComponentMixin } from './mixins/component.js';\nimport { PropertiesMixin } from './mixins/properties-component.js';\nimport { EventsMixin } from './mixins/events-component.js';\nimport { StyleMixin } from './mixins/style-component.js';\nimport { TemplateMixin } from './mixins/template-component.js';\n\nexport const DOM = DOM_HELPERS;\nexport const MIXINS = {\n    ComponentMixin,\n    PropertiesMixin,\n    EventsMixin,\n    StyleMixin,\n    TemplateMixin,\n};\nexport const HELPERS = {\n    dispatch,\n};\nexport { mix } from './lib/mixins.js';\nexport { prop } from './lib/property.js';\nexport { shim } from './lib/shim.js';\n"],"names":["isFunction","fn","isString","str","isObject","obj","isUndefined","isArray","Array","dispatch","node","evName","data","bubbles","cancelable","TypeError","ev","CustomEvent","dispatchEvent","getComponent","nodeType","Node","ELEMENT_NODE","is","getAttribute","tagName","registry","get","connect","CONNECTED","call","disconnect","DISCONNECTED","update","name","oldValue","newValue","UPDATED","bind","Ctr","__proto__","prototype","defineProperty","create","descriptor","createElement","appendChild","parent","parentNode","lastElementChild","removeChild","insertBefore","refNode","replaceChild","setAttribute","value","attrs","constructor","observedAttributes","indexOf","removeAttribute","prop","ctrs","Property","getValue","property","attrVal","accepts","Boolean","String","JSON","parse","ex","context","attr","currentAttrValue","undefined","createStyle","id","styleElem","doc","type","head","firstElementChild","importStyle","style","textContent","isNew","outerHTML","shim","Original","Polyfilled","this","desc","config","element","document","extends","Object","define","Component","render","props","k","self","event","params","evt","createEvent","initCustomEvent","detail","components","toLowerCase","ComponentMixin","SuperClass","connectedCallback","disconnectedCallback","attributeChangedCallback","localName","_","validator","_setter","val","getterFn","_this","setterFn","validateType","changed","observe","push","unobserve","io","splice","i","len","length","clb","scope","named","attrRequested","attrName","default","initValue","defaultValue","freeze","attribute","eventName","getter","callback","_this2","setter","validate","init","Number","PropertiesMixin","_SuperClass","properties","reduce","res","partialProps","hasAttribute","oldVal","newVal","observeProperty","propName","ELEM_PROTO","Element","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","SPLIT_SELECTOR","EventsMixin","events","rule","match","selector","trim","delegate","addEventListener","target","trigger","StyleMixin","updateCSS","classList","add","css","TemplateMixin","template","tpl","Error","innerHTML","t","arguments","Mixin","superclass","with","args","slice","c","mixin","mix","superClass","DOM","DOM_HELPERS","MIXINS","HELPERS","BaseComponent","HTMLElement"],"mappings":"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"}