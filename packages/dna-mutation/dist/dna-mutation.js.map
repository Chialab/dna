{"version":3,"file":"dna-mutation.js","sources":["node_modules/@dnajs/core/src/lib/typeof.js","node_modules/@dnajs/core/src/lib/dispatch.js","node_modules/@dnajs/core/src/lib/nodes.js","node_modules/@dnajs/core/src/lib/property.js","node_modules/@dnajs/core/src/mixins/properties-component.js","node_modules/@dnajs/core/src/lib/style.js","node_modules/@dnajs/core/src/lib/shim.js","node_modules/@dnajs/core/index.js","packages/dna-mutation/src/mutation-observer.js","node_modules/@dnajs/core/src/polyfills/custom-event.js","node_modules/@dnajs/core/src/lib/registry.js","node_modules/@dnajs/core/src/mixins/component.js","node_modules/@dnajs/core/src/polyfills/matches.js","node_modules/@dnajs/core/src/mixins/events-component.js","node_modules/@dnajs/core/src/mixins/style-component.js","node_modules/@dnajs/core/src/mixins/template-component.js","node_modules/@dnajs/core/src/polyfills/reduce.js","node_modules/@dnajs/core/src/lib/mixins.js","node_modules/@dnajs/core/src/library-helpers.js"],"sourcesContent":["export function isFunction(fn) {\n    return typeof fn === 'function';\n}\n\nexport function isString(str) {\n    return typeof str === 'string';\n}\n\nexport function isObject(obj) {\n    return typeof obj === 'object';\n}\n\nexport function isUndefined(obj) {\n    return typeof obj === 'undefined';\n}\n\nexport function isArray(obj) {\n    return Array.isArray(obj);\n}\n","import { isString } from './typeof.js';\nimport { CustomEvent } from '../polyfills/custom-event.js';\n\nexport function dispatch(node, evName, data, bubbles = true, cancelable = true) {\n    if (!isString(evName)) {\n        throw new TypeError('Event name is undefined');\n    }\n    let ev = new CustomEvent(evName, {\n        detail: data,\n        bubbles,\n        cancelable,\n    });\n    return node.dispatchEvent(ev);\n}\n","import { isFunction } from './typeof.js';\nimport { registry } from './registry.js';\n\nconst CONNECTED = 'connectedCallback';\nconst DISCONNECTED = 'disconnectedCallback';\nconst UPDATED = 'attributeChangedCallback';\n\nexport function getComponent(node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n        node = node.getAttribute('is') || node.tagName;\n    }\n    return registry.get(node);\n}\n\nexport function isComponent(node) {\n    let desc = getComponent(node);\n    return desc && (node instanceof desc.Ctr);\n}\n\nexport function connect(node) {\n    if (isComponent(node)) {\n        node[CONNECTED].call(node);\n        return true;\n    }\n}\n\nexport function disconnect(node) {\n    if (isComponent(node)) {\n        node[DISCONNECTED].call(node);\n        return true;\n    }\n}\n\nexport function update(node, name, oldValue, newValue) {\n    if (isComponent(node)) {\n        node[UPDATED].call(node, name, oldValue, newValue);\n        return true;\n    }\n}\n\nexport function bind(node, Ctr) {\n    if (!isFunction(Ctr)) {\n        let desc = getComponent(node);\n        if (desc) {\n            Ctr = desc.Ctr;\n        }\n    }\n    if (isFunction(Ctr)) {\n        node.__proto__ = Ctr.prototype;\n        Object.defineProperty(node, 'constructor', {\n            value: Ctr,\n            configurable: true,\n            writable: true,\n        });\n        Ctr.call(node);\n        return true;\n    }\n    return false;\n}\n\nexport function createElement(is) {\n    let descriptor = getComponent(is);\n    if (descriptor) {\n        return new descriptor.Ctr();\n    }\n}\n\nexport function appendChild(parent, node) {\n    if (parent !== node.parentNode || parent.lastElementChild !== node) {\n        if (node.parentNode) {\n            removeChild(node.parentNode, node);\n        }\n        parent.appendChild(node);\n        return connect(node);\n    }\n    return false;\n}\n\nexport function removeChild(parent, node) {\n    parent.removeChild(node);\n    return disconnect(node);\n}\n\nexport function insertBefore(parent, node, refNode) {\n    if (node.nextSibling !== refNode) {\n        if (node.parentNode) {\n            disconnect(node);\n        }\n        parent.insertBefore(node, refNode);\n        return connect(node);\n    }\n}\n\nexport function replaceChild(parent, node, refNode) {\n    if (node.parentNode) {\n        disconnect(node);\n    }\n    parent.replaceChild(node, refNode);\n    disconnect(refNode);\n    return connect(node);\n}\n\nexport function setAttribute(node, name, value) {\n    let oldValue = node.getAttribute(name);\n    node.setAttribute(name, value);\n    let attrs = node.constructor.observedAttributes || [];\n    if (attrs.indexOf(name) !== -1) {\n        return update(node, name, oldValue, value);\n    }\n}\n\nexport function removeAttribute(node, name) {\n    let oldValue = node.getAttribute(name);\n    node.removeAttribute(name);\n    let attrs = node.constructor.observedAttributes || [];\n    if (attrs.indexOf(name) !== -1) {\n        return update(node, name, oldValue, null);\n    }\n}\n","import { isUndefined, isFunction, isArray, isObject, isString } from './typeof.js';\n\nconst define = Object.defineProperty;\n\nclass Property {\n    constructor(ctrs) {\n        this._ = [];\n        ctrs = ctrs || [];\n        if (!isArray(ctrs)) {\n            ctrs = [ctrs];\n        }\n        this.ctrs = ctrs;\n        this.validator = () => true;\n        this._setter = (val) => val;\n        this.getterFn = () => this.value;\n        this.setterFn = (val) => {\n            val = this._setter(val);\n            if ((val === null || val === undefined) ||\n                this.validateType(val) && this.validator(val)) {\n                let oldValue = this.value;\n                if (oldValue !== val) {\n                    this.value = val;\n                    this.changed(val, oldValue);\n                }\n            } else {\n                // eslint-disable-next-line\n                throw new TypeError(\n                    `Invalid \\`${val}\\` value for \\`${this.name}\\` property for \\`${this.scope.is}\\`.`\n                );\n            }\n        };\n    }\n\n    observe(fn) {\n        if (isFunction(fn) || isString(fn)) {\n            this._.push(fn);\n        }\n        return this;\n    }\n\n    unobserve(fn) {\n        let io = this._.indexOf(fn);\n        if (io !== -1) {\n            this._.splice(io, 1);\n        }\n        return this;\n    }\n\n    changed(newValue, oldValue) {\n        for (let i = 0, len = this._.length; i < len; i++) {\n            let clb = this._[i];\n            if (isString(clb)) {\n                this.scope[clb].call(this.scope, this, newValue, oldValue);\n            } else {\n                clb(this, newValue, oldValue);\n            }\n        }\n    }\n\n    accepts(Ctr) {\n        return this.ctrs.indexOf(Ctr) !== -1;\n    }\n\n    named(name) {\n        this.name = name;\n        if (this.attrRequested === true) {\n            this.attrName = this.name;\n        }\n        return this;\n    }\n\n    default(initValue) {\n        this.defaultValue = isObject(initValue) ?\n            Object.freeze(initValue) :\n            initValue;\n        return this;\n    }\n\n    attribute(attrName = true) {\n        if (isString(attrName)) {\n            this.attrRequested = false;\n            this.attrName = attrName;\n        } else {\n            this.attrRequested = !!attrName;\n            this.attrName = this.name;\n        }\n        return this;\n    }\n\n    dispatch(evName) {\n        this.eventName = evName;\n        return this;\n    }\n\n    getter(callback) {\n        if (isFunction(callback)) {\n            this.getterFn = () => callback(this.value);\n        }\n        return this;\n    }\n\n    setter(callback) {\n        if (isFunction(callback)) {\n            this._setter = callback;\n        }\n        return this;\n    }\n\n    validate(callback) {\n        if (isFunction(callback)) {\n            this.validator = callback;\n        }\n        return this;\n    }\n\n    validateType(val) {\n        let i = 0;\n        let ctrs = this.ctrs;\n        if (ctrs.length === 0) {\n            return true;\n        }\n        while (i < ctrs.length) {\n            if (val instanceof ctrs[i] || (\n                val.constructor && val.constructor === ctrs[i]\n            )) {\n                return true;\n            }\n            i++;\n        }\n        return false;\n    }\n\n    init(scope) {\n        this.scope = scope;\n        define(scope, this.name, {\n            get: this.getterFn.bind(this),\n            set: this.setterFn.bind(this),\n            configurable: true,\n        });\n        if (!isUndefined(this.defaultValue)) {\n            scope[this.name] = this.defaultValue;\n        }\n    }\n}\n\nexport function prop(ctrs) {\n    if (ctrs instanceof Property) {\n        return ctrs;\n    }\n    return new Property(ctrs);\n}\n\ndefine(prop, 'ANY', { get() { return prop(); } });\ndefine(prop, 'STRING', { get() { return prop(String); } });\ndefine(prop, 'BOOLEAN', { get() { return prop(Boolean); } });\ndefine(prop, 'NUMBER', { get() { return prop(Number); } });\n","import { isArray } from '../lib/typeof.js';\nimport { dispatch } from '../lib/dispatch.js';\nimport { isUndefined } from '../lib/typeof.js';\nimport { prop } from '../lib/property.js';\n\nfunction getValue(property, attrVal) {\n    if (attrVal === '' && property.accepts(Boolean)) {\n        return true;\n    }\n    if (!property.accepts(String)) {\n        try {\n            return JSON.parse(attrVal);\n        } catch (ex) {\n            //\n        }\n    }\n    return attrVal;\n}\n\nfunction setAttribute(context, attr, value) {\n    let currentAttrValue = context.getAttribute(attr);\n    if (currentAttrValue !== value) {\n        if (value !== null && value !== undefined && value !== false) {\n            switch (typeof value) {\n            case 'string':\n            case 'number':\n                context.setAttribute(attr, value);\n                break;\n            case 'boolean':\n                context.setAttribute(attr, '');\n            }\n        } else if (currentAttrValue !== null) {\n            context.removeAttribute(attr);\n        }\n    }\n}\n\n/**\n * Simple Custom Component for properties initialization via attributes.\n *\n * @example\n * my-component.js\n * ```js\n * import { Component, PropertiesMixin, mix } from 'dna/component';\n * export class MyComponent extends mix(Component).with(PropertiesMixin) {\n *   get properties() {\n *     return { name: String };\n *   }\n * }\n * ```\n * app.js\n * ```js\n * import { define } from 'dna/component';\n * import { MyComponent } from './components/my-component/my-component.js';\n * define('my-component', MyComponent);\n * var temp = document.createElement('div');\n * temp.innerHTML = '<my-component name=\"Albert\"></my-component>';\n * var element = temp.firstChild;\n * console.log(element.name); // logs \"Albert\"\n * ```\n */\nexport const PropertiesMixin = (SuperClass) => class extends SuperClass {\n    /**\n     * On `created` callback, apply attributes to properties.\n     */\n    constructor() {\n        super();\n        let props = this.properties;\n        if (props) {\n            if (!isArray(props)) {\n                props = [props];\n            }\n            props = props.reduce((res, partialProps) => {\n                for (let k in partialProps) {\n                    res[k] = prop(partialProps[k]);\n                }\n                return res;\n            }, {});\n        } else {\n            props = {};\n        }\n        Object.defineProperty(this, 'properties', {\n            value: props,\n            writable: false,\n            configurable: true,\n        });\n        let observed = this.constructor.observedAttributes || [];\n        for (let k in props) {\n            let prop = props[k];\n            prop.named(k).init(this);\n            let { attrName, eventName } = prop;\n            if (!attrName && observed.indexOf(k) !== -1) {\n                prop.attribute();\n                attrName = k;\n            }\n            if (attrName || eventName) {\n                prop.observe(() => {\n                    if (attrName) {\n                        setAttribute(this, attrName, this[prop.name]);\n                    }\n                    if (eventName) {\n                        dispatch(this, eventName);\n                    }\n                });\n            }\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        let props = this.properties;\n        for (let k in props) {\n            let prop = props[k];\n            let { attrName } = prop;\n            if (attrName) {\n                if (isUndefined(this[prop.name])) {\n                    if (this.hasAttribute(attrName)) {\n                        this[prop.name] = getValue(prop, this.getAttribute(attrName));\n                    }\n                } else {\n                    setAttribute(this, attrName, this[prop.name]);\n                }\n            }\n        }\n    }\n    /**\n     * On `attributeChanged` callback, sync attributes with properties.\n     * @param {String} attrName The changed attribute name.\n     * @param {*} oldVal The value of the attribute before the change.\n     * @param {*} newVal The value of the attribute after the change.\n     */\n    attributeChangedCallback(attr, oldVal, newVal) {\n        super.attributeChangedCallback(attr, oldVal, newVal);\n        let props = this.properties;\n        for (let k in props) {\n            let prop = props[k];\n            if (prop.attrName === attr) {\n                this[prop.name] = getValue(prop, newVal);\n                return;\n            }\n        }\n    }\n    /**\n     * Create a listener for node's property changes.\n     * @param {string} propName The property name to observe.\n     * @param {Function} callback The callback to fire.\n     * @return {Object} An object with `cancel` method.\n     */\n    observeProperty(propName, callback) {\n        this.properties[propName].observe(callback);\n    }\n    unobserveProperty(propName, callback) {\n        this.properties[propName].unobserve(callback);\n    }\n};\n","let doc = document;\n\nexport function createStyle(id) {\n    let styleElem = doc.createElement('style');\n    styleElem.type = 'text/css';\n    styleElem.setAttribute('id', `style-${id}`);\n    let head = doc.head;\n    /* istanbul ignore else */\n    if (head.firstElementChild) {\n        head.insertBefore(styleElem, head.firstElementChild);\n    } else {\n        head.appendChild(styleElem);\n    }\n    return styleElem;\n}\n","import { registry } from './registry.js';\nimport { isString } from './typeof.js';\n\nfunction isNew(node) {\n    try {\n        return !isString(node.outerHTML);\n    } catch (ex) {\n        return true;\n    }\n}\n\nexport function shim(Original) {\n    class Polyfilled {\n        constructor() {\n            if (!isNew(this)) {\n                return this;\n            }\n            let desc = registry.get(this.constructor);\n            let config = desc.config;\n            // Find the tagname of the constructor and create a new element with it\n            let element = document.createElement(\n                config.extends ? config.extends : desc.is\n            );\n            element.__proto__ = desc.Ctr.prototype;\n            if (config.extends) {\n                element.setAttribute('is', desc.is);\n            }\n            return element;\n        }\n    }\n    Polyfilled.prototype = Object.create(Original.prototype, {\n        constructor: {\n            value: Polyfilled,\n            configurable: true,\n            writable: true,\n        },\n    });\n    return Polyfilled;\n}\n","/**\n * DNA\n * (c) 2015-2016 Chialab (http://www.chialab.com) <dev@chialab.io>\n * http://dna.chialab.io\n *\n * Just another components pattern.\n * Use with Custom Elements specs.\n */\nimport { mix, prop, shim, HELPERS, DOM, MIXINS } from './src/library-helpers.js';\nimport { registry } from './src/lib/registry.js';\n\nexport { mix, prop, shim, HELPERS, DOM, MIXINS };\nexport { registry };\nexport function define(tagName, Component, config) {\n    return registry.define(tagName, Component, config);\n}\nexport function render(node, Component, props) {\n    let element = new Component();\n    for (let k in props) {\n        element[k] = props[k];\n    }\n    DOM.appendChild(node, element);\n    return element;\n}\n\n/**\n * Simple Custom Component with some behaviors.\n * @class BaseComponent\n * @extends HTMLElement\n *\n * @example\n * my-component.js\n * ```js\n * import { BaseComponent } from 'dna/component';\n * export class MyComponent extends BaseComponent {\n *   static get observedAttributes() {\n *     return ['...', '...'];\n *   }\n *   get css() {\n *     return '...';\n *   }\n *   get events() {\n *     return {\n *       '...': '...'\n *     };\n *   }\n *   get template() {\n *     return '...';\n *   }\n *   get properties() {\n *     return { ... };\n *   }\n * }\n */\nexport class BaseComponent extends mix(\n    shim(self.HTMLElement)\n).with(\n    MIXINS.ComponentMixin,\n    MIXINS.PropertiesMixin,\n    MIXINS.StyleMixin,\n    MIXINS.EventsMixin,\n    MIXINS.TemplateMixin\n) {}\n","import { DOM } from '@dnajs/core';\n\nfunction onCreation(nodes) {\n    [].forEach.call(nodes, (node) => {\n        if (!node.is) {\n            if(DOM.bind(node)) {\n                DOM.connect(node);\n            }\n        } else {\n            DOM.connect(node);\n        }\n        if (node.children) {\n            onCreation(node.children);\n        }\n    });\n}\n\nconst OBSERVER = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n        switch (mutation.type) {\n        case 'childList': {\n            if (mutation.addedNodes) {\n                onCreation(mutation.addedNodes);\n            }\n            if (mutation.removedNodes) {\n                mutation.removedNodes.forEach((node) => {\n                    DOM.disconnect(node);\n                });\n            }\n            break;\n        }\n        case 'attributes': {\n            let attributeName = mutation.attributeName;\n            if (attributeName === 'is') {\n                break;\n            }\n            let node = mutation.target;\n            DOM.update(\n                node,\n                attributeName,\n                mutation.oldValue,\n                node.getAttribute(attributeName)\n            );\n            break;\n        }\n        }\n    });\n});\n\nOBSERVER.observe(document.body, {\n    attributes: true,\n    childList: true,\n    subtree: true,\n});\n","let CustomEvent;\n\ntry {\n    // eslint-disable-next-line\n    let ev = new self.CustomEvent('test');\n    CustomEvent = self.CustomEvent;\n} catch(ex) {\n    CustomEvent = function(event, params) {\n        params = params || {\n            bubbles: false,\n            cancelable: false,\n            detail: undefined,\n        };\n        let evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return evt;\n    };\n    CustomEvent.prototype = self.CustomEvent.prototype;\n}\n\nexport { CustomEvent };\n","import { isFunction, isString } from './typeof.js';\n\nexport const registry = {\n    components: {},\n    define(name, Ctr, config = {}) {\n        this.components[name.toLowerCase()] = {\n            is: name,\n            Ctr,\n            config,\n        };\n    },\n    get(name) {\n        if (isString(name)) {\n            return this.components[name.toLowerCase()];\n        } else if (isFunction(name)) {\n            for (let k in this.components) {\n                let desc = this.components[k];\n                if (desc.Ctr === name) {\n                    return desc;\n                }\n            }\n        }\n    },\n};\n","export const ComponentMixin = (SuperClass) => class extends SuperClass {\n    get is() {\n        return this.getAttribute('is') || this.localName;\n    }\n    /**\n     * Fires when an instance was inserted into the document.\n     */\n    connectedCallback() {}\n    /**\n     * Fires when an instance was detached from the document.\n     */\n    disconnectedCallback() {}\n    /**\n     * Fires when an attribute was added, removed, or updated.\n     * @param {String} attrName The changed attribute name.\n     * @param {*} oldVal The value of the attribute before the change.\n     * @param {*} newVal The value of the attribute after the change.\n     */\n    attributeChangedCallback() {}\n};\n","const ELEM_PROTO = Element.prototype;\n\nexport const matches = ELEM_PROTO.matches ||\n    ELEM_PROTO.matchesSelector ||\n    ELEM_PROTO.mozMatchesSelector ||\n    ELEM_PROTO.msMatchesSelector ||\n    ELEM_PROTO.oMatchesSelector ||\n    ELEM_PROTO.webkitMatchesSelector;\n","import { isString, isFunction } from '../lib/typeof.js';\nimport { matches } from '../polyfills/matches.js';\nimport { dispatch } from '../lib/dispatch.js';\n\nconst SPLIT_SELECTOR = /([^\\s]+)(.*)?/;\n\n/**\n * Simple Custom Component with events delegation,\n * It also implement a `dispatchEvent` wrapper named `trigger`.\n *\n * @example\n * my-component.js\n * ```js\n * import { EventsMixin, Component, mix } from 'dna/component';\n * export class MyComponent extends mix(Component).with(EventsMixin) {\n *   get events() {\n *     return {\n *       'click button': 'onButtonClick'\n *     }\n *   }\n *   onButtonClick() {\n *     console.log('button clicked');\n *   }\n * }\n * ```\n * app.js\n * ```js\n * import { define } from 'dna/component';\n * import { MyComponent } from './components/my-component/my-component.js';\n * define('my-component', MyComponent);\n * var element = new MyComponent();\n * var button = document.createElement('button');\n * button.innerText = 'Click me';\n * element.appendChild(button);\n * button.click(); // logs \"button clicked\"\n * ```\n */\nexport const EventsMixin = (SuperClass) => class extends SuperClass {\n    /**\n     * Fires when an instance of the element is created.\n     */\n    constructor() {\n        super();\n        // bind events\n        let events = this.events || {};\n        for (let k in events) {\n            let callback = isString(events[k]) ?\n                this[events[k]] :\n                events[k];\n            if (isFunction(callback)) {\n                let rule = k.match(SPLIT_SELECTOR);\n                let evName = rule[1];\n                let selector = (rule[2] || '').trim();\n                if (selector) {\n                    this.delegate(evName, selector, callback);\n                } else {\n                    this.addEventListener(evName, (ev) => {\n                        callback.call(this, ev, this);\n                    });\n                }\n            } else {\n                throw new TypeError('Invalid callback for event.');\n            }\n        }\n    }\n    delegate(evName, selector, callback) {\n        this.addEventListener(evName, (event) => {\n            let target = event.target;\n            while (target && target !== this) {\n                if (matches.call(target, selector)) {\n                    callback.call(this, event, target);\n                }\n                target = target.parentNode;\n            }\n        });\n    }\n    /**\n     * `Node.prototype.dispatchEvent` wrapper.\n     * @param {String} evName The name of the event to fire.\n     * @param {Object} data A set of custom data to pass to the event.\n     * @param {Boolean} bubbles Should the event bubble throw the DOM tree.\n     * @param {Boolean} cancelable Can be the event cancel by a callback.\n     */\n    trigger(evName, data, bubbles = true, cancelable = true) {\n        return dispatch(this, evName, data, bubbles, cancelable);\n    }\n};\n","import { isString } from '../lib/typeof.js';\nimport { createStyle } from '../lib/style.js';\n\n/**\n * Simple Custom Component with css style handling using the `css` property.\n *\n * @example\n * my-component.js\n * ```js\n * import { StyleMixin, Component, mix } from 'dna/component';\n * export class MyComponent extends mix(Component).with(StyleMixin) {\n *   get css() {\n *     return '.my-component p { color: red; }'\n *   }\n * }\n * ```\n * app.js\n * ```js\n * import { define } from 'dna/component';\n * import { MyComponent } from './components/my-component/my-component.js';\n * define('my-component', MyComponent);\n * var element = new MyComponent();\n * var p = document.createElement('p');\n * p.innerText = 'Paragraph';\n * element.appendChild(p); // text inside `p` gets the red color\n * ```\n */\nexport const StyleMixin = (SuperClass) => class extends SuperClass {\n    /**\n     * Fires when an instance of the element is created.\n     */\n    constructor() {\n        super();\n        if (!this.constructor.styleElem) {\n            let Ctr = this.constructor;\n            Object.defineProperty(Ctr, 'styleElem', {\n                value: createStyle(this.is),\n            });\n        }\n        this.updateCSS();\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n        this.classList.add(this.is);\n    }\n\n    updateCSS() {\n        let style = this.css;\n        if (isString(style)) {\n            this.constructor.styleElem.textContent = style;\n        }\n    }\n};\n","import { isFunction, isString } from '../lib/typeof.js';\n\n/**\n * Simple Custom Component with template handling using the `template` property.\n *\n * @example\n * my-component.js\n * ```js\n * import { Component, TemplateMixin, mix } from 'dna/component';\n * export class MyComponent extends mix(Component).with(TemplateMixin) {\n *   get template() {\n *     return '<h1>${this.name}</h1>';\n *   }\n *   get name() {\n *     return 'Newton';\n *   }\n * }\n * ```\n * app.js\n * ```js\n * import { define } from 'dna/component';\n * import { MyComponent } from './components/my-component/my-component.js';\n * define('my-component', MyComponent);\n * var element = new MyComponent();\n * console.log(element.innerHTML); // logs \"<h1>Newton</h1>\"\n * ```\n */\nexport const TemplateMixin = (SuperClass) => class extends SuperClass {\n    constructor() {\n        super();\n        if (this.template) {\n            let props = this.properties;\n            if (props) {\n                let callback = () => {\n                    this.render();\n                };\n                for (let k in props) {\n                    props[k].observe(callback);\n                }\n            }\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        if (this.template) {\n            this.render();\n        }\n    }\n    /**\n     * Update Component child nodes.\n     */\n    render(tpl) {\n        tpl = tpl || this.template;\n        /* istanbul ignore else */\n        if (isFunction(tpl)) {\n            tpl();\n        } else if (isString(tpl)) {\n            this.innerHTML = tpl;\n        } else {\n            throw new Error('Invalid template property.');\n        }\n    }\n};\n","/* eslint-disable prefer-rest-params */\nexport const reduce = Array.prototype.reduce || function(callback /*, initialValue*/ ) {\n    'use strict';\n    let t = this;\n    let len = t.length;\n    let k = 0;\n    let value;\n    if (arguments.length === 2) {\n        value = arguments[1];\n    } else {\n        while (k < len && !(k in t)) {\n            k++;\n        }\n        value = t[k++];\n    }\n    for (; k < len; k++) {\n        if (k in t) {\n            value = callback(value, t[k], k, t);\n        }\n    }\n    return value;\n};\n","import { reduce } from '../polyfills/reduce.js';\n/**\n * @author Justin Fagnani\n * @see https://github.com/justinfagnani/mixwith.js\n */\nclass Mixin {\n    constructor(superclass) {\n        superclass = superclass || class {};\n        this.superclass = superclass;\n    }\n\n    with() {\n        // eslint-disable-next-line\n        let args = [].slice.call(arguments, 0);\n        return reduce.call(args, (c, mixin) => mixin(c), this.superclass);\n    }\n}\n\nexport const mix = (superClass) => new Mixin(superClass);\n","import { dispatch } from './lib/dispatch.js';\nimport * as DOM_HELPERS from './lib/nodes.js';\nimport { ComponentMixin } from './mixins/component.js';\nimport { PropertiesMixin } from './mixins/properties-component.js';\nimport { EventsMixin } from './mixins/events-component.js';\nimport { StyleMixin } from './mixins/style-component.js';\nimport { TemplateMixin } from './mixins/template-component.js';\n\nexport const DOM = DOM_HELPERS;\nexport const MIXINS = {\n    ComponentMixin,\n    PropertiesMixin,\n    EventsMixin,\n    StyleMixin,\n    TemplateMixin,\n};\nexport const HELPERS = {\n    dispatch,\n};\nexport { mix } from './lib/mixins.js';\nexport { prop } from './lib/property.js';\nexport { shim } from './lib/shim.js';\nexport * from './lib/typeof.js';\n"],"names":["isFunction","fn","isString","str","isObject","obj","isUndefined","isArray","Array","dispatch","node","evName","data","bubbles","cancelable","TypeError","ev","CustomEvent","dispatchEvent","getComponent","nodeType","Node","ELEMENT_NODE","getAttribute","tagName","registry","get","isComponent","desc","Ctr","connect","CONNECTED","call","disconnect","DISCONNECTED","update","name","oldValue","newValue","UPDATED","bind","__proto__","prototype","defineProperty","createElement","is","descriptor","appendChild","parent","parentNode","lastElementChild","removeChild","insertBefore","refNode","nextSibling","replaceChild","setAttribute","value","attrs","constructor","observedAttributes","indexOf","removeAttribute","prop","ctrs","Property","getValue","property","attrVal","accepts","Boolean","String","JSON","parse","ex","context","attr","currentAttrValue","undefined","createStyle","id","styleElem","doc","type","head","firstElementChild","isNew","outerHTML","shim","Original","Polyfilled","this","config","element","document","extends","Object","create","define","Component","render","props","k","onCreation","nodes","forEach","DOM","children","self","event","params","evt","createEvent","initCustomEvent","detail","components","toLowerCase","ComponentMixin","SuperClass","connectedCallback","disconnectedCallback","attributeChangedCallback","localName","_","validator","_setter","val","getterFn","_this","setterFn","validateType","scope","changed","observe","push","unobserve","io","splice","i","len","length","clb","named","attrRequested","attrName","default","initValue","defaultValue","freeze","attribute","eventName","getter","callback","_this2","setter","validate","init","Number","PropertiesMixin","_SuperClass","properties","reduce","res","partialProps","observed","hasAttribute","oldVal","newVal","observeProperty","propName","unobserveProperty","ELEM_PROTO","Element","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","SPLIT_SELECTOR","EventsMixin","events","rule","match","selector","trim","delegate","addEventListener","target","trigger","StyleMixin","updateCSS","classList","add","style","css","textContent","TemplateMixin","template","tpl","Error","innerHTML","t","arguments","Mixin","superclass","with","args","slice","c","mixin","mix","superClass","DOM_HELPERS","MIXINS","HELPERS","BaseComponent","HTMLElement","OBSERVER","MutationObserver","mutations","mutation","addedNodes","removedNodes","attributeName","body"],"mappings":"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"}