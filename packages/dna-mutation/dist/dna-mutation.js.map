{"version":3,"file":"dna-mutation.js","sources":["node_modules/@dnajs/core/src/lib/typeof.js","node_modules/@dnajs/core/src/lib/dispatch.js","node_modules/@dnajs/core/src/lib/nodes.js","node_modules/@dnajs/core/src/lib/property.js","node_modules/@dnajs/core/src/mixins/properties-component.js","node_modules/@dnajs/core/src/lib/style.js","node_modules/@dnajs/core/src/lib/shim.js","node_modules/@dnajs/core/index.js","packages/dna-mutation/observer.js","node_modules/@dnajs/core/src/polyfills/custom-event.js","node_modules/@dnajs/core/src/lib/registry.js","node_modules/@dnajs/core/src/mixins/component.js","node_modules/@dnajs/core/src/polyfills/matches.js","node_modules/@dnajs/core/src/mixins/events-component.js","node_modules/@dnajs/core/src/mixins/style-component.js","node_modules/@dnajs/core/src/mixins/template-component.js","node_modules/@dnajs/core/src/polyfills/reduce.js","node_modules/@dnajs/core/src/lib/mixins.js","node_modules/@dnajs/core/src/library-helpers.js"],"sourcesContent":["export function isFunction(fn) {\n    return typeof fn === 'function';\n}\n\nexport function isString(str) {\n    return typeof str === 'string';\n}\n\nexport function isObject(obj) {\n    return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isUndefined(obj) {\n    return typeof obj === 'undefined';\n}\n\nexport function isArray(obj) {\n    return Array.isArray(obj);\n}\n","import { isString } from './typeof.js';\nimport { CustomEvent } from '../polyfills/custom-event.js';\n\nexport function dispatch(node, evName, data, bubbles = true, cancelable = true) {\n    if (!isString(evName)) {\n        throw new TypeError('Event name is undefined');\n    }\n    let ev = new CustomEvent(evName, {\n        detail: data,\n        bubbles,\n        cancelable,\n    });\n    return node.dispatchEvent(ev);\n}\n","import { isFunction } from './typeof.js';\nimport { registry } from './registry.js';\n\nconst CONNECTED = 'connectedCallback';\nconst DISCONNECTED = 'disconnectedCallback';\nconst UPDATED = 'attributeChangedCallback';\n\nexport function getComponent(node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n        node = node.getAttribute('is') || node.tagName;\n    }\n    return registry.get(node);\n}\n\nexport function isComponent(node) {\n    let desc = getComponent(node);\n    return desc && (node instanceof desc.Ctr);\n}\n\nexport function connect(node) {\n    if (isComponent(node)) {\n        node[CONNECTED].call(node);\n        return true;\n    }\n}\n\nexport function disconnect(node) {\n    if (isComponent(node)) {\n        node[DISCONNECTED].call(node);\n        return true;\n    }\n}\n\nexport function update(node, name, oldValue, newValue) {\n    if (isComponent(node)) {\n        node[UPDATED].call(node, name, oldValue, newValue);\n        return true;\n    }\n}\n\nexport function bind(node, Ctr) {\n    if (!isFunction(Ctr)) {\n        let desc = getComponent(node);\n        if (desc) {\n            Ctr = desc.Ctr;\n        }\n    }\n    if (isFunction(Ctr)) {\n        node.__proto__ = Ctr.prototype;\n        Object.defineProperty(node, 'constructor', {\n            value: Ctr,\n            configurable: true,\n            writable: true,\n        });\n        Ctr.call(node);\n        return true;\n    }\n    return false;\n}\n\nexport function createElement(is) {\n    let descriptor = getComponent(is);\n    if (descriptor) {\n        return new descriptor.Ctr();\n    }\n}\n\nexport function appendChild(parent, node) {\n    if (parent !== node.parentNode || parent.lastElementChild !== node) {\n        if (node.parentNode) {\n            removeChild(node.parentNode, node);\n        }\n        parent.appendChild(node);\n        return connect(node);\n    }\n    return false;\n}\n\nexport function removeChild(parent, node) {\n    parent.removeChild(node);\n    return disconnect(node);\n}\n\nexport function insertBefore(parent, node, refNode) {\n    if (node.nextSibling !== refNode) {\n        if (node.parentNode) {\n            disconnect(node);\n        }\n        parent.insertBefore(node, refNode);\n        return connect(node);\n    }\n}\n\nexport function replaceChild(parent, node, refNode) {\n    if (node.parentNode) {\n        disconnect(node);\n    }\n    parent.replaceChild(node, refNode);\n    disconnect(refNode);\n    return connect(node);\n}\n\nexport function setAttribute(node, name, value) {\n    let oldValue = node.getAttribute(name);\n    node.setAttribute(name, value);\n    let attrs = node.constructor.observedAttributes || [];\n    if (attrs.indexOf(name) !== -1) {\n        return update(node, name, oldValue, value);\n    }\n}\n\nexport function removeAttribute(node, name) {\n    let oldValue = node.getAttribute(name);\n    node.removeAttribute(name);\n    let attrs = node.constructor.observedAttributes || [];\n    if (attrs.indexOf(name) !== -1) {\n        return update(node, name, oldValue, null);\n    }\n}\n","import { isUndefined, isFunction, isArray, isObject, isString } from './typeof.js';\n\nconst define = Object.defineProperty;\n\nclass Property {\n    constructor(ctrs) {\n        this._ = [];\n        ctrs = ctrs || [];\n        if (!isArray(ctrs)) {\n            ctrs = [ctrs];\n        }\n        this.ctrs = ctrs;\n        this.validator = () => true;\n        this._setter = (val) => val;\n        this.getterFn = () => this.value;\n        this.setterFn = (val) => {\n            val = this._setter(val);\n            if ((val === null || val === undefined) ||\n                this.validateType(val) && this.validator(val)) {\n                let oldValue = this.value;\n                if (oldValue !== val) {\n                    this.value = val;\n                    this.changed(val, oldValue);\n                }\n            } else {\n                // eslint-disable-next-line\n                throw new TypeError(\n                    `Invalid \\`${val}\\` value for \\`${this.name}\\` property for \\`${this.scope.is}\\`.`\n                );\n            }\n        };\n    }\n\n    observe(fn) {\n        if (isFunction(fn) || isString(fn)) {\n            this._.push(fn);\n        }\n        return this;\n    }\n\n    unobserve(fn) {\n        let io = this._.indexOf(fn);\n        if (io !== -1) {\n            this._.splice(io, 1);\n        }\n        return this;\n    }\n\n    changed(newValue, oldValue) {\n        for (let i = 0, len = this._.length; i < len; i++) {\n            let clb = this._[i];\n            if (isString(clb)) {\n                this.scope[clb].call(this.scope, this, newValue, oldValue);\n            } else {\n                clb(this, newValue, oldValue);\n            }\n        }\n    }\n\n    accepts(Ctr) {\n        return this.ctrs.indexOf(Ctr) !== -1;\n    }\n\n    named(name) {\n        this.name = name;\n        if (this.attrRequested === true) {\n            this.attrName = this.name;\n        }\n        return this;\n    }\n\n    default(initValue) {\n        this.defaultValue = isObject(initValue) ?\n            Object.freeze(initValue) :\n            initValue;\n        return this;\n    }\n\n    attribute(attrName = true) {\n        if (isString(attrName)) {\n            this.attrRequested = false;\n            this.attrName = attrName;\n        } else {\n            this.attrRequested = !!attrName;\n            this.attrName = this.name;\n        }\n        return this;\n    }\n\n    dispatch(evName) {\n        this.eventName = evName;\n        return this;\n    }\n\n    getter(callback) {\n        if (isFunction(callback)) {\n            this.getterFn = () => callback(this.value);\n        }\n        return this;\n    }\n\n    setter(callback) {\n        if (isFunction(callback)) {\n            this._setter = callback;\n        }\n        return this;\n    }\n\n    validate(callback) {\n        if (isFunction(callback)) {\n            this.validator = callback;\n        }\n        return this;\n    }\n\n    validateType(val) {\n        let i = 0;\n        let ctrs = this.ctrs;\n        if (ctrs.length === 0) {\n            return true;\n        }\n        while (i < ctrs.length) {\n            if (val instanceof ctrs[i] || (\n                val.constructor && val.constructor === ctrs[i]\n            )) {\n                return true;\n            }\n            i++;\n        }\n        return false;\n    }\n\n    init(scope) {\n        this.scope = scope;\n        define(scope, this.name, {\n            get: this.getterFn.bind(this),\n            set: this.setterFn.bind(this),\n            configurable: true,\n        });\n        if (!isUndefined(this.defaultValue)) {\n            scope[this.name] = this.defaultValue;\n        }\n    }\n}\n\nexport function prop(ctrs) {\n    if (ctrs instanceof Property) {\n        return ctrs;\n    }\n    return new Property(ctrs);\n}\n\ndefine(prop, 'ANY', { get() { return prop(); } });\ndefine(prop, 'STRING', { get() { return prop(String); } });\ndefine(prop, 'BOOLEAN', { get() { return prop(Boolean); } });\ndefine(prop, 'NUMBER', { get() { return prop(Number); } });\n","import { isArray } from '../lib/typeof.js';\nimport { dispatch } from '../lib/dispatch.js';\nimport { isUndefined } from '../lib/typeof.js';\nimport { prop } from '../lib/property.js';\n\nfunction getValue(property, attrVal) {\n    if (attrVal === '' && property.accepts(Boolean)) {\n        return true;\n    }\n    if (!property.accepts(String)) {\n        try {\n            return JSON.parse(attrVal);\n        } catch (ex) {\n            //\n        }\n    }\n    return attrVal;\n}\n\nfunction setAttribute(context, attr, value) {\n    let currentAttrValue = context.getAttribute(attr);\n    if (currentAttrValue !== value) {\n        if (value !== null && value !== undefined && value !== false) {\n            switch (typeof value) {\n            case 'string':\n            case 'number':\n                context.setAttribute(attr, value);\n                break;\n            case 'boolean':\n                context.setAttribute(attr, '');\n            }\n        } else if (currentAttrValue !== null) {\n            context.removeAttribute(attr);\n        }\n    }\n}\n\n/**\n * Simple Custom Component for properties initialization via attributes.\n *\n * @example\n * my-component.js\n * ```js\n * import { Component, PropertiesMixin, mix } from 'dna/component';\n * export class MyComponent extends mix(Component).with(PropertiesMixin) {\n *   get properties() {\n *     return { name: String };\n *   }\n * }\n * ```\n * app.js\n * ```js\n * import { define } from 'dna/component';\n * import { MyComponent } from './components/my-component/my-component.js';\n * define('my-component', MyComponent);\n * var temp = document.createElement('div');\n * temp.innerHTML = '<my-component name=\"Albert\"></my-component>';\n * var element = temp.firstChild;\n * console.log(element.name); // logs \"Albert\"\n * ```\n */\nexport const PropertiesMixin = (SuperClass) => class extends SuperClass {\n    /**\n     * On `created` callback, apply attributes to properties.\n     */\n    constructor() {\n        super();\n        let props = this.properties;\n        if (props) {\n            if (!isArray(props)) {\n                props = [props];\n            }\n            props = props.reduce((res, partialProps) => {\n                for (let k in partialProps) {\n                    res[k] = prop(partialProps[k]);\n                }\n                return res;\n            }, {});\n        } else {\n            props = {};\n        }\n        Object.defineProperty(this, 'properties', {\n            value: props,\n            writable: false,\n            configurable: true,\n        });\n        let observed = this.constructor.observedAttributes || [];\n        for (let k in props) {\n            let prop = props[k];\n            prop.named(k).init(this);\n            let { attrName, eventName } = prop;\n            if (!attrName && observed.indexOf(k) !== -1) {\n                prop.attribute();\n                attrName = k;\n            }\n            if (attrName || eventName) {\n                prop.observe(() => {\n                    if (attrName) {\n                        setAttribute(this, attrName, this[prop.name]);\n                    }\n                    if (eventName) {\n                        dispatch(this, eventName);\n                    }\n                });\n            }\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        let props = this.properties;\n        for (let k in props) {\n            let prop = props[k];\n            let { attrName } = prop;\n            if (attrName) {\n                if (isUndefined(this[prop.name])) {\n                    if (this.hasAttribute(attrName)) {\n                        this[prop.name] = getValue(prop, this.getAttribute(attrName));\n                    }\n                } else {\n                    setAttribute(this, attrName, this[prop.name]);\n                }\n            }\n        }\n    }\n    /**\n     * On `attributeChanged` callback, sync attributes with properties.\n     * @param {String} attrName The changed attribute name.\n     * @param {*} oldVal The value of the attribute before the change.\n     * @param {*} newVal The value of the attribute after the change.\n     */\n    attributeChangedCallback(attr, oldVal, newVal) {\n        super.attributeChangedCallback(attr, oldVal, newVal);\n        let props = this.properties;\n        for (let k in props) {\n            let prop = props[k];\n            if (prop.attrName === attr) {\n                this[prop.name] = getValue(prop, newVal);\n                return;\n            }\n        }\n    }\n    /**\n     * Create a listener for node's property changes.\n     * @param {string} propName The property name to observe.\n     * @param {Function} callback The callback to fire.\n     * @return {Object} An object with `cancel` method.\n     */\n    observeProperty(propName, callback) {\n        this.properties[propName].observe(callback);\n    }\n    unobserveProperty(propName, callback) {\n        this.properties[propName].unobserve(callback);\n    }\n};\n","let doc = document;\n\nexport function createStyle(id) {\n    let styleElem = doc.createElement('style');\n    styleElem.type = 'text/css';\n    styleElem.setAttribute('id', `style-${id}`);\n    let head = doc.head;\n    /* istanbul ignore else */\n    if (head.firstElementChild) {\n        head.insertBefore(styleElem, head.firstElementChild);\n    } else {\n        head.appendChild(styleElem);\n    }\n    return styleElem;\n}\n","import { registry } from './registry.js';\nimport { isString } from './typeof.js';\n\nfunction isNew(node) {\n    try {\n        return !isString(node.outerHTML);\n    } catch (ex) {\n        return true;\n    }\n}\n\nexport function shim(Original) {\n    class Polyfilled {\n        constructor() {\n            if (!isNew(this)) {\n                return this;\n            }\n            let desc = registry.get(this.constructor);\n            let config = desc.config;\n            // Find the tagname of the constructor and create a new element with it\n            let element = document.createElement(\n                config.extends ? config.extends : desc.is\n            );\n            element.__proto__ = desc.Ctr.prototype;\n            if (config.extends) {\n                element.setAttribute('is', desc.is);\n            }\n            return element;\n        }\n    }\n    Polyfilled.prototype = Object.create(Original.prototype, {\n        constructor: {\n            value: Polyfilled,\n            configurable: true,\n            writable: true,\n        },\n    });\n    return Polyfilled;\n}\n","/**\n * DNA\n * (c) 2015-2016 Chialab (http://www.chialab.com) <dev@chialab.io>\n * http://dna.chialab.io\n *\n * Just another components pattern.\n * Use with Custom Elements specs.\n */\nimport { mix, prop, shim, HELPERS, DOM, MIXINS } from './src/library-helpers.js';\nimport { registry } from './src/lib/registry.js';\n\nexport { mix, prop, shim, HELPERS, DOM, MIXINS };\nexport { registry };\nexport function define(tagName, Component, config) {\n    return registry.define(tagName, Component, config);\n}\nexport function render(node, Component, props) {\n    let element = new Component();\n    for (let k in props) {\n        element[k] = props[k];\n    }\n    DOM.appendChild(node, element);\n    return element;\n}\n\n/**\n * Simple Custom Component with some behaviors.\n * @class BaseComponent\n * @extends HTMLElement\n *\n * @example\n * my-component.js\n * ```js\n * import { BaseComponent } from 'dna/component';\n * export class MyComponent extends BaseComponent {\n *   static get observedAttributes() {\n *     return ['...', '...'];\n *   }\n *   get css() {\n *     return '...';\n *   }\n *   get events() {\n *     return {\n *       '...': '...'\n *     };\n *   }\n *   get template() {\n *     return '...';\n *   }\n *   get properties() {\n *     return { ... };\n *   }\n * }\n */\nexport class BaseComponent extends mix(\n    shim(self.HTMLElement)\n).with(\n    MIXINS.ComponentMixin,\n    MIXINS.PropertiesMixin,\n    MIXINS.StyleMixin,\n    MIXINS.EventsMixin,\n    MIXINS.TemplateMixin\n) {}\n","import { DOM } from '@dnajs/core';\n\nfunction onCreation(nodes) {\n    [].forEach.call(nodes, (node) => {\n        if (!node.is) {\n            if(DOM.bind(node)) {\n                DOM.connect(node);\n            }\n        } else {\n            DOM.connect(node);\n        }\n        if (node.children) {\n            onCreation(node.children);\n        }\n    });\n}\n\nconst OBSERVER = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n        switch (mutation.type) {\n        case 'childList': {\n            if (mutation.addedNodes) {\n                onCreation(mutation.addedNodes);\n            }\n            if (mutation.removedNodes) {\n                mutation.removedNodes.forEach((node) => {\n                    DOM.disconnect(node);\n                });\n            }\n            break;\n        }\n        case 'attributes': {\n            let attributeName = mutation.attributeName;\n            if (attributeName === 'is') {\n                break;\n            }\n            let node = mutation.target;\n            DOM.update(\n                node,\n                attributeName,\n                mutation.oldValue,\n                node.getAttribute(attributeName)\n            );\n            break;\n        }\n        }\n    });\n});\n\nOBSERVER.observe(document.body, {\n    attributes: true,\n    childList: true,\n    subtree: true,\n});\n","let CustomEvent;\n\ntry {\n    // eslint-disable-next-line\n    let ev = new self.CustomEvent('test');\n    CustomEvent = self.CustomEvent;\n} catch(ex) {\n    CustomEvent = function(event, params) {\n        params = params || {\n            bubbles: false,\n            cancelable: false,\n            detail: undefined,\n        };\n        let evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return evt;\n    };\n    CustomEvent.prototype = self.CustomEvent.prototype;\n}\n\nexport { CustomEvent };\n","import { isFunction, isString } from './typeof.js';\n\nexport const registry = {\n    components: {},\n    define(name, Ctr, config = {}) {\n        this.components[name.toLowerCase()] = {\n            is: name,\n            Ctr,\n            config,\n        };\n    },\n    get(name) {\n        if (isString(name)) {\n            return this.components[name.toLowerCase()];\n        } else if (isFunction(name)) {\n            for (let k in this.components) {\n                let desc = this.components[k];\n                if (desc.Ctr === name) {\n                    return desc;\n                }\n            }\n        }\n    },\n};\n","export const ComponentMixin = (SuperClass) => class extends SuperClass {\n    get is() {\n        return this.getAttribute('is') || this.localName;\n    }\n    /**\n     * Fires when an instance was inserted into the document.\n     */\n    connectedCallback() {}\n    /**\n     * Fires when an instance was detached from the document.\n     */\n    disconnectedCallback() {}\n    /**\n     * Fires when an attribute was added, removed, or updated.\n     * @param {String} attrName The changed attribute name.\n     * @param {*} oldVal The value of the attribute before the change.\n     * @param {*} newVal The value of the attribute after the change.\n     */\n    attributeChangedCallback() {}\n};\n","const ELEM_PROTO = Element.prototype;\n\nexport const matches = ELEM_PROTO.matches ||\n    ELEM_PROTO.matchesSelector ||\n    ELEM_PROTO.mozMatchesSelector ||\n    ELEM_PROTO.msMatchesSelector ||\n    ELEM_PROTO.oMatchesSelector ||\n    ELEM_PROTO.webkitMatchesSelector;\n","import { isString, isFunction } from '../lib/typeof.js';\nimport { matches } from '../polyfills/matches.js';\nimport { dispatch } from '../lib/dispatch.js';\n\nconst SPLIT_SELECTOR = /([^\\s]+)(.*)?/;\n\n/**\n * Simple Custom Component with events delegation,\n * It also implement a `dispatchEvent` wrapper named `trigger`.\n *\n * @example\n * my-component.js\n * ```js\n * import { EventsMixin, Component, mix } from 'dna/component';\n * export class MyComponent extends mix(Component).with(EventsMixin) {\n *   get events() {\n *     return {\n *       'click button': 'onButtonClick'\n *     }\n *   }\n *   onButtonClick() {\n *     console.log('button clicked');\n *   }\n * }\n * ```\n * app.js\n * ```js\n * import { define } from 'dna/component';\n * import { MyComponent } from './components/my-component/my-component.js';\n * define('my-component', MyComponent);\n * var element = new MyComponent();\n * var button = document.createElement('button');\n * button.innerText = 'Click me';\n * element.appendChild(button);\n * button.click(); // logs \"button clicked\"\n * ```\n */\nexport const EventsMixin = (SuperClass) => class extends SuperClass {\n    /**\n     * Fires when an instance of the element is created.\n     */\n    constructor() {\n        super();\n        // bind events\n        let events = this.events || {};\n        for (let k in events) {\n            let callback = isString(events[k]) ?\n                this[events[k]] :\n                events[k];\n            if (isFunction(callback)) {\n                let rule = k.match(SPLIT_SELECTOR);\n                let evName = rule[1];\n                let selector = (rule[2] || '').trim();\n                if (selector) {\n                    this.delegate(evName, selector, callback);\n                } else {\n                    this.addEventListener(evName, (ev) => {\n                        callback.call(this, ev, this);\n                    });\n                }\n            } else {\n                throw new TypeError('Invalid callback for event.');\n            }\n        }\n    }\n    delegate(evName, selector, callback) {\n        this.addEventListener(evName, (event) => {\n            let target = event.target;\n            while (target && target !== this) {\n                if (matches.call(target, selector)) {\n                    callback.call(this, event, target);\n                }\n                target = target.parentNode;\n            }\n        });\n    }\n    /**\n     * `Node.prototype.dispatchEvent` wrapper.\n     * @param {String} evName The name of the event to fire.\n     * @param {Object} data A set of custom data to pass to the event.\n     * @param {Boolean} bubbles Should the event bubble throw the DOM tree.\n     * @param {Boolean} cancelable Can be the event cancel by a callback.\n     */\n    trigger(evName, data, bubbles = true, cancelable = true) {\n        return dispatch(this, evName, data, bubbles, cancelable);\n    }\n};\n","import { isString } from '../lib/typeof.js';\nimport { createStyle } from '../lib/style.js';\n\n/**\n * Simple Custom Component with css style handling using the `css` property.\n *\n * @example\n * my-component.js\n * ```js\n * import { StyleMixin, Component, mix } from 'dna/component';\n * export class MyComponent extends mix(Component).with(StyleMixin) {\n *   get css() {\n *     return '.my-component p { color: red; }'\n *   }\n * }\n * ```\n * app.js\n * ```js\n * import { define } from 'dna/component';\n * import { MyComponent } from './components/my-component/my-component.js';\n * define('my-component', MyComponent);\n * var element = new MyComponent();\n * var p = document.createElement('p');\n * p.innerText = 'Paragraph';\n * element.appendChild(p); // text inside `p` gets the red color\n * ```\n */\nexport const StyleMixin = (SuperClass) => class extends SuperClass {\n    /**\n     * Fires when an instance of the element is created.\n     */\n    constructor() {\n        super();\n        if (!this.constructor.styleElem) {\n            let Ctr = this.constructor;\n            Object.defineProperty(Ctr, 'styleElem', {\n                value: createStyle(this.is),\n            });\n        }\n        this.updateCSS();\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n        this.classList.add(this.is);\n    }\n\n    updateCSS() {\n        let style = this.css;\n        if (isString(style)) {\n            this.constructor.styleElem.textContent = style;\n        }\n    }\n};\n","import { isFunction, isString } from '../lib/typeof.js';\n\n/**\n * Simple Custom Component with template handling using the `template` property.\n *\n * @example\n * my-component.js\n * ```js\n * import { Component, TemplateMixin, mix } from 'dna/component';\n * export class MyComponent extends mix(Component).with(TemplateMixin) {\n *   get template() {\n *     return '<h1>${this.name}</h1>';\n *   }\n *   get name() {\n *     return 'Newton';\n *   }\n * }\n * ```\n * app.js\n * ```js\n * import { define } from 'dna/component';\n * import { MyComponent } from './components/my-component/my-component.js';\n * define('my-component', MyComponent);\n * var element = new MyComponent();\n * console.log(element.innerHTML); // logs \"<h1>Newton</h1>\"\n * ```\n */\nexport const TemplateMixin = (SuperClass) => class extends SuperClass {\n    constructor() {\n        super();\n        if (this.template) {\n            let props = this.properties;\n            if (props) {\n                let callback = () => {\n                    this.render();\n                };\n                for (let k in props) {\n                    props[k].observe(callback);\n                }\n            }\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        if (this.template) {\n            this.render();\n        }\n    }\n    /**\n     * Update Component child nodes.\n     */\n    render(tpl) {\n        tpl = tpl || this.template;\n        /* istanbul ignore else */\n        if (isFunction(tpl)) {\n            tpl();\n        } else if (isString(tpl)) {\n            this.innerHTML = tpl;\n        } else {\n            throw new Error('Invalid template property.');\n        }\n    }\n};\n","/* eslint-disable prefer-rest-params */\nexport const reduce = Array.prototype.reduce || function(callback /*, initialValue*/ ) {\n    'use strict';\n    let t = this;\n    let len = t.length;\n    let k = 0;\n    let value;\n    if (arguments.length === 2) {\n        value = arguments[1];\n    } else {\n        while (k < len && !(k in t)) {\n            k++;\n        }\n        value = t[k++];\n    }\n    for (; k < len; k++) {\n        if (k in t) {\n            value = callback(value, t[k], k, t);\n        }\n    }\n    return value;\n};\n","import { reduce } from '../polyfills/reduce.js';\n/**\n * @author Justin Fagnani\n * @see https://github.com/justinfagnani/mixwith.js\n */\nclass Mixin {\n    constructor(superclass) {\n        superclass = superclass || class {};\n        this.superclass = superclass;\n    }\n\n    with() {\n        // eslint-disable-next-line\n        let args = [].slice.call(arguments, 0);\n        return reduce.call(args, (c, mixin) => mixin(c), this.superclass);\n    }\n}\n\nexport const mix = (superClass) => new Mixin(superClass);\n","import { dispatch } from './lib/dispatch.js';\nimport * as DOM_HELPERS from './lib/nodes.js';\nimport { ComponentMixin } from './mixins/component.js';\nimport { PropertiesMixin } from './mixins/properties-component.js';\nimport { EventsMixin } from './mixins/events-component.js';\nimport { StyleMixin } from './mixins/style-component.js';\nimport { TemplateMixin } from './mixins/template-component.js';\n\nexport const DOM = DOM_HELPERS;\nexport const MIXINS = {\n    ComponentMixin,\n    PropertiesMixin,\n    EventsMixin,\n    StyleMixin,\n    TemplateMixin,\n};\nexport const HELPERS = {\n    dispatch,\n};\nexport { mix } from './lib/mixins.js';\nexport { prop } from './lib/property.js';\nexport { shim } from './lib/shim.js';\nexport * from './lib/typeof.js';\n"],"names":["isFunction","fn","isString","str","isObject","obj","Object","prototype","toString","call","isUndefined","isArray","Array","dispatch","node","evName","data","bubbles","cancelable","TypeError","ev","CustomEvent","dispatchEvent","getComponent","nodeType","Node","ELEMENT_NODE","getAttribute","tagName","registry","get","isComponent","desc","Ctr","connect","CONNECTED","disconnect","DISCONNECTED","update","name","oldValue","newValue","UPDATED","bind","__proto__","defineProperty","createElement","is","descriptor","appendChild","parent","parentNode","lastElementChild","removeChild","insertBefore","refNode","nextSibling","replaceChild","setAttribute","value","attrs","constructor","observedAttributes","indexOf","removeAttribute","prop","ctrs","Property","getValue","property","attrVal","accepts","Boolean","String","JSON","parse","ex","context","attr","currentAttrValue","undefined","createStyle","id","styleElem","doc","type","head","firstElementChild","isNew","outerHTML","shim","Original","Polyfilled","this","config","element","document","extends","create","define","Component","render","props","k","onCreation","nodes","forEach","DOM","children","self","event","params","evt","createEvent","initCustomEvent","detail","components","toLowerCase","ComponentMixin","SuperClass","connectedCallback","disconnectedCallback","attributeChangedCallback","localName","_","validator","_setter","val","getterFn","_this","setterFn","validateType","scope","changed","observe","push","unobserve","io","splice","i","len","length","clb","named","attrRequested","attrName","default","initValue","defaultValue","freeze","attribute","eventName","getter","callback","_this2","setter","validate","init","Number","PropertiesMixin","_SuperClass","properties","reduce","res","partialProps","observed","hasAttribute","oldVal","newVal","observeProperty","propName","unobserveProperty","ELEM_PROTO","Element","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","SPLIT_SELECTOR","EventsMixin","events","rule","match","selector","trim","delegate","addEventListener","target","trigger","StyleMixin","updateCSS","classList","add","style","css","textContent","TemplateMixin","template","tpl","Error","innerHTML","t","arguments","Mixin","superclass","with","args","slice","c","mixin","mix","superClass","DOM_HELPERS","MIXINS","HELPERS","BaseComponent","HTMLElement","OBSERVER","MutationObserver","mutations","mutation","addedNodes","removedNodes","attributeName","body"],"mappings":"4LAAO,SAASA,GAAWC,SACF,kBAAPA,GAGlB,QAAgBC,GAASC,SACC,gBAARA,GAGlB,QAAgBC,GAASC,SAC0B,oBAAxCC,OAAOC,UAAUC,SAASC,KAAKJ,GAG1C,QAAgBK,GAAYL,SACF,mBAARA,GAGlB,QAAgBM,GAAQN,SACbO,OAAMD,QAAQN,GCdlB,QAASQ,GAASC,EAAMC,EAAQC,MAAMC,8DAAgBC,iEACpDhB,EAASa,QACJ,IAAII,WAAU,8BAEpBC,GAAK,GAAIC,GAAYN,UACbC,iCAILF,GAAKQ,cAAcF,GCL9B,QAAgBG,GAAaT,SACrBA,GAAKU,WAAaC,KAAKC,iBAChBZ,EAAKa,aAAa,OAASb,EAAKc,SAEpCC,EAASC,IAAIhB,GAGxB,QAAgBiB,GAAYjB,MACpBkB,GAAOT,EAAaT,SACjBkB,IAASlB,YAAgBkB,GAAKC,IAGzC,QAAgBC,GAAQpB,MAChBiB,EAAYjB,YACPqB,GAAW1B,KAAKK,IACd,EAIf,QAAgBsB,GAAWtB,MACnBiB,EAAYjB,YACPuB,GAAc5B,KAAKK,IACjB,EAIf,QAAgBwB,GAAOxB,EAAMyB,EAAMC,EAAUC,MACrCV,EAAYjB,YACP4B,GAASjC,KAAKK,EAAMyB,EAAMC,EAAUC,IAClC,EAIf,QAAgBE,GAAK7B,EAAMmB,OAClBjC,EAAWiC,GAAM,IACdD,GAAOT,EAAaT,EACpBkB,OACMA,EAAKC,aAGfjC,EAAWiC,OACNW,UAAYX,EAAI1B,iBACdsC,eAAe/B,EAAM,qBACjBmB,gBACO,YACJ,MAEVxB,KAAKK,IACF,GAKf,QAAgBgC,GAAcC,MACtBC,GAAazB,EAAawB,MAC1BC,QACO,IAAIA,GAAWf,IAI9B,QAAgBgB,GAAYC,EAAQpC,UAC5BoC,IAAWpC,EAAKqC,YAAcD,EAAOE,mBAAqBtC,KACtDA,EAAKqC,cACOrC,EAAKqC,WAAYrC,KAE1BmC,YAAYnC,GACZoB,EAAQpB,IAKvB,QAAgBuC,GAAYH,EAAQpC,YACzBuC,YAAYvC,GACZsB,EAAWtB,GAGtB,QAAgBwC,GAAaJ,EAAQpC,EAAMyC,MACnCzC,EAAK0C,cAAgBD,QACjBzC,GAAKqC,cACMrC,KAERwC,aAAaxC,EAAMyC,GACnBrB,EAAQpB,GAIvB,QAAgB2C,GAAaP,EAAQpC,EAAMyC,SACnCzC,GAAKqC,cACMrC,KAER2C,aAAa3C,EAAMyC,KACfA,GACJrB,EAAQpB,GAGnB,QAAgB4C,GAAa5C,EAAMyB,EAAMoB,MACjCnB,GAAW1B,EAAKa,aAAaY,KAC5BmB,aAAanB,EAAMoB,MACpBC,GAAQ9C,EAAK+C,YAAYC,0BACzBF,EAAMG,QAAQxB,MAAU,QACjBD,GAAOxB,EAAMyB,EAAMC,EAAUmB,GAI5C,QAAgBK,GAAgBlD,EAAMyB,MAC9BC,GAAW1B,EAAKa,aAAaY,KAC5ByB,gBAAgBzB,MACjBqB,GAAQ9C,EAAK+C,YAAYC,0BACzBF,EAAMG,QAAQxB,MAAU,QACjBD,GAAOxB,EAAMyB,EAAMC,EAAU,MC6B5C,QAAgByB,GAAKC,SACbA,aAAgBC,GACTD,EAEJ,GAAIC,GAASD,GChJxB,QAASE,GAASC,EAAUC,MACR,KAAZA,GAAkBD,EAASE,QAAQC,gBAC5B,MAENH,EAASE,QAAQE,kBAEPC,MAAKC,MAAML,GACpB,MAAOM,UAINN,GAGX,QAASZ,GAAamB,EAASC,EAAMnB,MAC7BoB,GAAmBF,EAAQlD,aAAamD,MACxCC,IAAqBpB,KACP,OAAVA,GAA4BqB,SAAVrB,GAAuBA,KAAU,4BACpCA,iBAAAA,QACV,aACA,WACOD,aAAaoB,EAAMnB,aAE1B,YACOD,aAAaoB,EAAM,QAEH,QAArBC,KACCf,gBAAgBc,GC9BpC,QAAgBG,GAAYC,MACpBC,GAAYC,EAAItC,cAAc,WACxBuC,KAAO,aACP3B,aAAa,cAAewB,MAClCI,GAAOF,EAAIE,WAEXA,GAAKC,oBACAjC,aAAa6B,EAAWG,EAAKC,qBAE7BtC,YAAYkC,GAEdA,ECVX,QAASK,GAAM1E,cAECZ,EAASY,EAAK2E,WACxB,MAAOb,UACE,GAIf,QAAgBc,GAAKC,MACXC,GACF,2BACSJ,EAAMK,YACAA,SAEP7D,GAAOH,EAASC,IAAI+D,KAAKhC,aACzBiC,EAAS9D,EAAK8D,OAEdC,EAAUC,SAASlD,cACnBgD,EAAOG,QAAUH,EAAOG,QAAUjE,EAAKe,aAEnCH,UAAYZ,EAAKC,IAAI1B,UACzBuF,EAAOG,WACCvC,aAAa,KAAM1B,EAAKe,IAE7BgD,YAGJxF,UAAYD,OAAO4F,OAAOP,EAASpF,8BAE/BqF,gBACO,YACJ,KAGXA,EC7BX,QAKgBO,GAAOvE,EAASwE,EAAWN,SAChCjE,GAASsE,OAAOvE,EAASwE,EAAWN,GAE/C,QAAgBO,GAAOvF,EAAMsF,EAAWE,MAChCP,GAAU,GAAIK,OACb,GAAIG,KAAKD,KACFC,GAAKD,EAAMC,aAEnBtD,YAAYnC,EAAMiF,GACfA,ECpBX,QAASS,GAAWC,MACbC,QAAQjG,KAAKgG,EAAO,SAAC3F,GACfA,EAAKiC,MAKFb,QAAQpB,GAJT6F,GAAIhE,KAAK7B,OACJoB,QAAQpB,GAKhBA,EAAK8F,YACM9F,EAAK8F,YCZ5B,GAAIvF,SAEJ,KAEa,GAAIwF,MAAKxF,YAAY,UAChBwF,KAAKxF,YACrB,MAAMuD,KACU,SAASkC,EAAOC,KACjBA,aACI,cACG,SACJ/B,WAERgC,GAAMhB,SAASiB,YAAY,wBAC3BC,gBAAgBJ,EAAOC,EAAO9F,QAAS8F,EAAO7F,WAAY6F,EAAOI,QAC9DH,KAECzG,UAAYsG,KAAKxF,YAAYd,UCftC,GAAMsB,kCAEFU,EAAMN,MAAK6D,kEACTsB,WAAW7E,EAAK8E,mBACb9E,gCAKRA,MACIrC,EAASqC,SACFsD,MAAKuB,WAAW7E,EAAK8E,cACzB,IAAIrH,EAAWuC,OACb,GAAIgE,KAAKV,MAAKuB,WAAY,IACvBpF,GAAO6D,KAAKuB,WAAWb,MACvBvE,EAAKC,MAAQM,QACNP,MRfrBG,EAAY,oBACZE,EAAe,uBACfK,EAAU,kvESLH4E,EAAiB,SAACC,8GAO3BC,2CAIAC,8CAOAC,0EAhBW7B,MAAKlE,aAAa,OAASkE,KAAK8B,iBAFaJ,IREtDpB,EAAS7F,OAAOuC,eAEhBsB,wBACUD,6BACH0D,OACE1D,MACFvD,EAAQuD,QACDA,SAEPA,KAAOA,OACP2D,UAAY,kBAAM,QAClBC,QAAU,SAACC,SAAQA,SACnBC,SAAW,iBAAMC,GAAKtE,YACtBuE,SAAW,SAACH,QACPE,EAAKH,QAAQC,KACN,OAARA,GAAwB/C,SAAR+C,GACjBE,EAAKE,aAAaJ,IAAQE,EAAKJ,UAAUE,SAQnC,IAAI5G,uBACO4G,kBAAqBE,EAAK1F,wBAAyB0F,EAAKG,MAAMrF,YAR3EP,GAAWyF,EAAKtE,KAChBnB,KAAauF,MACRpE,MAAQoE,IACRM,QAAQN,EAAKvF,wBAWlC8F,iBAAQrI,UACAD,EAAWC,IAAOC,EAASD,UACtB2H,EAAEW,KAAKtI,GAET4F,kBAGX2C,mBAAUvI,MACFwI,GAAK5C,KAAK+B,EAAE7D,QAAQ9D,SACpBwI,MAAO,QACFb,EAAEc,OAAOD,EAAI,GAEf5C,kBAGXwC,iBAAQ5F,EAAUD,OACT,GAAImG,GAAI,EAAGC,EAAM/C,KAAK+B,EAAEiB,OAAQF,EAAIC,EAAKD,IAAK,IAC3CG,GAAMjD,KAAK+B,EAAEe,EACbzI,GAAS4I,QACJV,MAAMU,GAAKrI,KAAKoF,KAAKuC,MAAOvC,KAAMpD,EAAUD,KAE7CqD,KAAMpD,EAAUD,iBAKhC+B,iBAAQtC,SACG4D,MAAK3B,KAAKH,QAAQ9B,MAAS,eAGtC8G,eAAMxG,eACGA,KAAOA,EACRsD,KAAKmD,iBAAkB,SAClBC,SAAWpD,KAAKtD,MAElBsD,kBAGXqD,iBAAQC,eACCC,aAAehJ,EAAS+I,GACzB7I,OAAO+I,OAAOF,GACdA,EACGtD,kBAGXyD,wBAAUL,oEACF/I,GAAS+I,SACJD,eAAgB,OAChBC,SAAWA,SAEXD,gBAAkBC,OAClBA,SAAWpD,KAAKtD,MAElBsD,kBAGXhF,kBAASE,eACAwI,UAAYxI,EACV8E,kBAGX2D,gBAAOC,oBACCzJ,GAAWyJ,UACNzB,SAAW,iBAAMyB,GAASC,EAAK/F,SAEjCkC,kBAGX8D,gBAAOF,SACCzJ,GAAWyJ,UACN3B,QAAU2B,GAEZ5D,kBAGX+D,kBAASH,SACDzJ,GAAWyJ,UACN5B,UAAY4B,GAEd5D,kBAGXsC,sBAAaJ,MACLY,GAAI,EACJzE,EAAO2B,KAAK3B,QACI,IAAhBA,EAAK2E,cACE,OAEJF,EAAIzE,EAAK2E,QAAQ,IAChBd,YAAe7D,GAAKyE,IACpBZ,EAAIlE,aAAekE,EAAIlE,cAAgBK,EAAKyE,UAErC,aAIR,eAGXkB,cAAKzB,QACIA,MAAQA,IACNA,EAAOvC,KAAKtD,UACVsD,KAAKmC,SAASrF,KAAKkD,UACnBA,KAAKqC,SAASvF,KAAKkD,oBACV,IAEbnF,EAAYmF,KAAKuD,kBACZvD,KAAKtD,MAAQsD,KAAKuD,mBAYpCjD,GAAOlC,EAAM,4BAAwBA,QACrCkC,EAAOlC,EAAM,+BAA2BA,GAAKQ,WAC7C0B,EAAOlC,EAAM,gCAA4BA,GAAKO,YAC9C2B,EAAOlC,EAAM,+BAA2BA,GAAK6F,UC9F7C,IAAaC,GAAkB,SAACxC,0DAKxByC,cACI1D,EAAQ2B,EAAKgC,UACb3D,IACK3F,EAAQ2F,QACAA,MAELA,EAAM4D,OAAO,SAACC,EAAKC,OAClB,GAAI7D,KAAK6D,KACN7D,GAAKtC,EAAKmG,EAAa7D,UAExB4D,qBAKRtH,iBAAqB,oBACjByD,YACG,gBACI,OAEd+D,GAAWpC,EAAKpE,YAAYC,kCACvByC,MACDtC,GAAOqC,EAAMC,KACZwC,MAAMxC,GAAGsD,WACRZ,GAAwBhF,EAAxBgF,SAAUM,EAActF,EAAdsF,SACXN,IAAYoB,EAAStG,QAAQwC,MAAO,MAChC+C,cACM/C,IAEX0C,GAAYM,MACPjB,QAAQ,WACLW,OACmBA,EAAUhB,EAAKhE,EAAK1B,OAEvCgH,OACeA,UAd1B,GAAIhD,KAAKD,KAALC,sCAoBbiB,yCACUA,gCACFlB,GAAQT,KAAKoE,eACZ,GAAI1D,KAAKD,GAAO,IACbrC,GAAOqC,EAAMC,GACX0C,EAAahF,EAAbgF,QACFA,KACIvI,EAAYmF,KAAK5B,EAAK1B,OAClBsD,KAAKyE,aAAarB,UACbhF,EAAK1B,MAAQ6B,EAASH,EAAM4B,KAAKlE,aAAasH,OAG1CpD,KAAMoD,EAAUpD,KAAK5B,EAAK1B,sBAWvDmF,kCAAyB5C,EAAMyF,EAAQC,eAC7B9C,mCAAyB5C,EAAMyF,EAAQC,MACzClE,GAAQT,KAAKoE,eACZ,GAAI1D,KAAKD,GAAO,IACbrC,GAAOqC,EAAMC,MACbtC,EAAKgF,WAAanE,mBACbb,EAAK1B,MAAQ6B,EAASH,EAAMuG,kBAW7CC,yBAAgBC,EAAUjB,QACjBQ,WAAWS,GAAUpC,QAAQmB,gBAEtCkB,2BAAkBD,EAAUjB,QACnBQ,WAAWS,GAAUlC,UAAUiB,OA1FiBlC,IQ7DvDqD,EAAaC,QAAQtK,UAEduK,EAAUF,EAAWE,SAC9BF,EAAWG,iBACXH,EAAWI,oBACXJ,EAAWK,mBACXL,EAAWM,kBACXN,EAAWO,sBCHTC,EAAiB,gBAiCVC,EAAc,SAAC9D,0DAKpByC,cAEIsB,EAASrD,EAAKqD,sBACT/E,MACDkD,GAAWvJ,EAASoL,EAAO/E,IAC3B0B,EAAKqD,EAAO/E,IACZ+E,EAAO/E,OACPvG,EAAWyJ,QAYL,IAAItI,WAAU,kCAXhBoK,GAAOhF,EAAEiF,MAAMJ,GACfrK,EAASwK,EAAK,GACdE,GAAYF,EAAK,IAAM,IAAIG,MAC3BD,KACKE,SAAS5K,EAAQ0K,EAAUhC,KAE3BmC,iBAAiB7K,EAAQ,SAACK,KAClBX,OAAWW,YAZ/B,GAAImF,KAAK+E,KAAL/E,sCAoBboF,kBAAS5K,EAAQ0K,EAAUhC,mBAClBmC,iBAAiB7K,EAAQ,SAAC+F,UACvB+E,GAAS/E,EAAM+E,OACZA,GAAUA,OACTf,EAAQrK,KAAKoL,EAAQJ,MACZhL,OAAWqG,EAAO+E,KAEtBA,EAAO1I,0BAW5B2I,iBAAQ/K,EAAQC,MAAMC,8DAAgBC,mEAC3BL,GAASgF,KAAM9E,EAAQC,EAAMC,EAASC,OA/CIqG,IRrCrDnC,EAAMY,SS2BG+F,EAAa,SAACxE,0DAKnByC,kBACK/B,EAAKpE,YAAYsB,UAAW,IACzBlD,GAAMgG,EAAKpE,mBACRhB,eAAeZ,EAAK,mBAChBgD,EAAYgD,EAAKlF,eAG3BiJ,wCAGTxE,yCACUA,kCACDyE,UAAUC,IAAIrG,KAAK9C,iBAG5BiJ,wBACQG,GAAQtG,KAAKuG,GACblM,GAASiM,UACJtI,YAAYsB,UAAUkH,YAAcF,OAvBG5E,ICA3C+E,EAAgB,SAAC/E,0DAEtByC,iBACI/B,EAAKsE,SAAU,IACXjG,GAAQ2B,EAAKgC,cACb3D,EAAO,IACHmD,GAAW,aACNpD,cAEJ,GAAIE,KAAKD,KACJC,GAAG+B,QAAQmB,uCAKjCjC,yCACUA,6BACF3B,KAAK0G,eACAlG,sBAMbA,gBAAOmG,QACGA,GAAO3G,KAAK0G,SAEdvM,EAAWwM,WAER,CAAA,IAAItM,EAASsM,QAGV,IAAIC,OAAM,mCAFXC,UAAYF,OA9B8BjF,IC1B9C2C,EAAStJ,MAAML,UAAU2J,QAAU,SAAST,MAEjDkD,GAAI9G,KACJ+C,EAAM+D,EAAE9D,OACRtC,EAAI,EACJ5C,YACqB,IAArBiJ,UAAU/D,SACF+D,UAAU,OACf,MACIrG,EAAIqC,KAASrC,IAAKoG,WAGjBA,EAAEpG,UAEPA,EAAIqC,EAAKrC,IACRA,IAAKoG,OACGlD,EAAS9F,EAAOgJ,EAAEpG,GAAIA,EAAGoG,UAGlChJ,ICfLkJ,wBACUC,eACKA,sDACRA,WAAaA,qBAGtBC,mBAEQC,MAAUC,MAAMxM,KAAKmM,UAAW,SAC7B1C,GAAOzJ,KAAKuM,EAAM,SAACE,EAAGC,SAAUA,GAAMD,IAAIrH,KAAKiH,kBAIjDM,EAAM,SAACC,SAAe,IAAIR,GAAMQ,ICVhC1G,GAAM2G,EACNC,mFAOAC,gBXsCAC,8FAAsBL,EAC/B1H,EAAKmB,KAAK6G,cACZX,KACEQ,GAAOjG,eACPiG,GAAOxD,gBACPwD,GAAOxB,WACPwB,GAAOlC,YACPkC,GAAOjB,gBC5CLqB,GAAW,GAAIC,kBAAiB,SAACC,KACzBnH,QAAQ,SAACoH,UACPA,EAASzI,UACZ,YACGyI,EAASC,cACED,EAASC,YAEpBD,EAASE,gBACAA,aAAatH,QAAQ,SAAC5F,MACvBsB,WAAWtB,eAKtB,gBACGmN,GAAgBH,EAASG,iBACP,OAAlBA,WAGAnN,GAAOgN,EAASjC,UAChBvJ,OACAxB,EACAmN,EACAH,EAAStL,SACT1B,EAAKa,aAAasM,QAQlCN,IAASrF,QAAQtC,SAASkI,kBACV,aACD,WACF"}