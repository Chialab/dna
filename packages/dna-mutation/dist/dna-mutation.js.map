{"version":3,"file":"dna-mutation.js","sources":["node_modules/dna-components/src/lib/typeof.js","node_modules/dna-components/src/lib/dispatch.js","node_modules/dna-components/src/lib/nodes.js","node_modules/dna-components/src/lib/property.js","node_modules/dna-components/src/mixins/properties-component.js","node_modules/dna-components/src/lib/style.js","node_modules/dna-components/src/lib/shim.js","node_modules/dna-components/index.js","packages/dna-mutation/src/mutation-observer.js","node_modules/dna-components/src/polyfills/custom-event.js","node_modules/dna-components/src/lib/registry.js","node_modules/dna-components/src/mixins/component.js","node_modules/dna-components/src/polyfills/matches.js","node_modules/dna-components/src/mixins/events-component.js","node_modules/dna-components/src/mixins/style-component.js","node_modules/dna-components/src/mixins/template-component.js","node_modules/dna-components/src/polyfills/reduce.js","node_modules/dna-components/src/lib/mixins.js","node_modules/dna-components/src/library-helpers.js"],"sourcesContent":["export function isFunction(fn) {\n    return typeof fn === 'function';\n}\n\nexport function isString(str) {\n    return typeof str === 'string';\n}\n\nexport function isObject(obj) {\n    return typeof obj === 'object';\n}\n\nexport function isUndefined(obj) {\n    return typeof obj === 'undefined';\n}\n\nexport function isArray(obj) {\n    return Array.isArray(obj);\n}\n","import { isString } from './typeof.js';\nimport { CustomEvent } from '../polyfills/custom-event.js';\n\nexport function dispatch(node, evName, data, bubbles = true, cancelable = true) {\n    if (!isString(evName)) {\n        throw new TypeError('Event name is undefined');\n    }\n    let ev = new CustomEvent(evName, {\n        detail: data,\n        bubbles,\n        cancelable,\n    });\n    return node.dispatchEvent(ev);\n}\n","import { isFunction } from './typeof.js';\nimport { registry } from './registry.js';\n\nconst CONNECTED = 'connectedCallback';\nconst DISCONNECTED = 'disconnectedCallback';\nconst UPDATED = 'attributeChangedCallback';\n\nexport function getComponent(node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n        let is = node.getAttribute('is') || node.tagName;\n        return registry.get(is);\n    }\n    return registry.get(node);\n}\n\nexport function connect(node) {\n    if (isFunction(node[CONNECTED])) {\n        node[CONNECTED].call(node);\n    }\n}\n\nexport function disconnect(node) {\n    if (isFunction(node[DISCONNECTED])) {\n        node[DISCONNECTED].call(node);\n    }\n}\n\nexport function update(node, name, oldValue, newValue) {\n    if (isFunction(node[UPDATED]) && name !== 'is') {\n        node[UPDATED].call(node, name, oldValue, newValue);\n    }\n}\n\nexport function bind(node, Ctr) {\n    node.__proto__ = Ctr.prototype;\n    Object.defineProperty(node, 'constructor', {\n        value: Ctr,\n        configurable: true,\n        writable: true,\n    });\n    Ctr.call(node);\n}\n\nexport function create(node, descriptor) {\n    descriptor = descriptor || getComponent(node);\n    if (descriptor) {\n        bind(node, descriptor.Ctr);\n        connect(node);\n    }\n}\n\nexport function createElement(is) {\n    let descriptor = getComponent(is);\n    if (descriptor) {\n        return new descriptor.Ctr();\n    }\n}\n\nexport function appendChild(parent, node) {\n    if (parent !== node.parentNode || parent.lastElementChild !== node) {\n        if (node.parentNode) {\n            removeChild(node.parentNode, node);\n        }\n        parent.appendChild(node);\n        connect(node);\n    }\n}\n\nexport function removeChild(parent, node) {\n    parent.removeChild(node);\n    disconnect(node);\n}\n\nexport function setAttribute(node, name, value) {\n    let oldValue = node.getAttribute(name);\n    node.setAttribute(name, value);\n    let attrs = node.constructor.observedAttributes || [];\n    if (attrs.indexOf(name) !== -1) {\n        update(node, name, oldValue, value);\n    }\n}\n\nexport function removeAttribute(node, name) {\n    let oldValue = node.getAttribute(name);\n    node.removeAttribute(name);\n    let attrs = node.constructor.observedAttributes || [];\n    if (attrs.indexOf(name) !== -1) {\n        update(node, name, oldValue, null);\n    }\n}\n","import { isUndefined, isFunction, isArray, isObject, isString } from './typeof.js';\n\nconst define = Object.defineProperty;\n\nclass Property {\n    constructor(ctrs) {\n        this._ = [];\n        ctrs = ctrs || [];\n        if (!isArray(ctrs)) {\n            ctrs = [ctrs];\n        }\n        this.ctrs = ctrs;\n        this.required = false;\n        this.validator = () => true;\n        this._setter = (val) => val;\n        this.getterFn = () => this.value;\n        this.setterFn = (val) => {\n            val = this._setter(val);\n            if (this.validateType(val)) {\n                if (this.validator(val)) {\n                    let oldValue = this.value;\n                    if (oldValue !== val) {\n                        this.value = val;\n                        this.changed(val, oldValue);\n                    }\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    observe(fn) {\n        if (isFunction(fn)) {\n            this._.push(fn);\n        }\n        return this;\n    }\n\n    unobserve(fn) {\n        let io = this._.indexOf(fn);\n        if (io !== -1) {\n            this._.splice(io, 1);\n        }\n        return this;\n    }\n\n    changed(newValue, oldValue) {\n        for (let i = 0, len = this._.length; i < len; i++) {\n            this._[i](this, newValue, oldValue);\n        }\n    }\n\n    accepts(Ctr) {\n        return this.ctrs.indexOf(Ctr) !== -1;\n    }\n\n    named(name) {\n        this.name = name;\n        if (this.attrRequested === true) {\n            this.attrName = this.name;\n        }\n        return this;\n    }\n\n    default(initValue) {\n        this.defaultValue = isObject(initValue) ?\n            Object.freeze(initValue) :\n            initValue;\n        return this;\n    }\n\n    scoped(scope) {\n        this.scope = scope;\n        define(scope, this.name, {\n            get: this.getterFn.bind(this),\n            set: this.setterFn.bind(this),\n            configurable: true,\n        });\n        return this;\n    }\n\n    attribute(attrName = true) {\n        if (isString(attrName)) {\n            this.attrRequested = false;\n            this.attrName = attrName;\n        } else {\n            this.attrRequested = !!attrName;\n        }\n        return this;\n    }\n\n    dispatch(evName) {\n        this.eventName = evName;\n        return this;\n    }\n\n    require() {\n        this.required = true;\n        return this;\n    }\n\n    getter(callback) {\n        if (isFunction(callback)) {\n            this.getterFn = () => callback(this.value);\n        }\n        return this;\n    }\n\n    setter(callback) {\n        if (isFunction(callback)) {\n            this._setter = callback;\n        }\n        return this;\n    }\n\n    validate(callback) {\n        if (isFunction(callback)) {\n            this.validator = callback;\n        }\n        return this;\n    }\n\n    validateType(val) {\n        if (val === null || val === undefined) {\n            return true;\n        }\n        let i = 0;\n        let ctrs = this.ctrs;\n        if (ctrs.length === 0) {\n            return true;\n        }\n        while (i < ctrs.length) {\n            if (val instanceof ctrs[i] || (\n                val.constructor && val.constructor === ctrs[i]\n            )) {\n                return true;\n            }\n            i++;\n        }\n        // eslint-disable-next-line\n        throw new TypeError(\n            `Invalid \\`${val}\\` value for \"${this.name}\" property${this.scope ? ` for ${this.scope.is}` : ''}.`\n        );\n    }\n\n    init(value) {\n        value = isUndefined(value) ? this.defaultValue : value;\n        if (!isUndefined(value)) {\n            if (!this.setter(value)) {\n                if (this.required) {\n                    throw new Error(\n                        `\"${this.name}\" property is required${this.scope ? ` for ${this.scope.is}` : ''}.`\n                    );\n                }\n            }\n        }\n    }\n}\n\nexport function prop(ctrs) {\n    if (ctrs instanceof Property) {\n        return ctrs;\n    }\n    return new Property(ctrs);\n}\n\ndefine(prop, 'ANY', { get() { return prop(); } });\ndefine(prop, 'STRING', { get() { return prop(String); } });\ndefine(prop, 'BOOLEAN', { get() { return prop(Boolean); } });\ndefine(prop, 'NUMBER', { get() { return prop(Number); } });\n","import { isArray } from '../lib/typeof.js';\nimport { dispatch } from '../lib/dispatch.js';\nimport { isUndefined } from '../lib/typeof.js';\nimport { prop } from '../lib/property.js';\n\nfunction getValue(property, attrVal) {\n    if (attrVal === '' && property.accepts(Boolean)) {\n        return true;\n    }\n    if (!property.accepts(String)) {\n        try {\n            return JSON.parse(attrVal);\n        } catch (ex) {\n            //\n        }\n    }\n    return attrVal;\n}\n\nfunction setAttribute(context, attr, value) {\n    let currentAttrValue = context.getAttribute(attr);\n    if (currentAttrValue !== value) {\n        if (value !== null && value !== undefined && value !== false) {\n            switch (typeof value) {\n            case 'string':\n            case 'number':\n                context.setAttribute(attr, value);\n                break;\n            case 'boolean':\n                context.setAttribute(attr, '');\n            }\n        } else if (currentAttrValue !== null) {\n            context.removeAttribute(attr);\n        }\n    }\n}\n\n/**\n * Simple Custom Component for properties initialization via attributes.\n *\n * @example\n * my-component.js\n * ```js\n * import { Component, PropertiesMixin, mix } from 'dna/component';\n * export class MyComponent extends mix(Component).with(PropertiesMixin) {\n *   get properties() {\n *     return { name: String };\n *   }\n * }\n * ```\n * app.js\n * ```js\n * import { define } from 'dna/component';\n * import { MyComponent } from './components/my-component/my-component.js';\n * define('my-component', MyComponent);\n * var temp = document.createElement('div');\n * temp.innerHTML = '<my-component name=\"Albert\"></my-component>';\n * var element = temp.firstChild;\n * console.log(element.name); // logs \"Albert\"\n * ```\n */\nexport const PropertiesMixin = (SuperClass) => class extends SuperClass {\n    /**\n     * On `created` callback, apply attributes to properties.\n     */\n    constructor() {\n        super();\n        let props = this.properties;\n        if (props) {\n            if (!isArray(props)) {\n                props = [props];\n            }\n            props = props.reduce((res, partialProps) => {\n                for (let k in partialProps) {\n                    res[k] = prop(partialProps[k]);\n                }\n                return res;\n            }, {});\n        } else {\n            props = {};\n        }\n        Object.defineProperty(this, 'properties', {\n            value: props,\n            writable: false,\n            configurable: true,\n        });\n        for (let k in props) {\n            let prop = props[k];\n            prop.named(k).scoped(this).init();\n            let { attrName, eventName } = prop;\n            if (attrName || eventName) {\n                prop.observe(() => {\n                    if (attrName) {\n                        setAttribute(this, attrName, this[prop.name]);\n                    }\n                    if (eventName) {\n                        dispatch(this, eventName);\n                    }\n                });\n            }\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        let props = this.properties;\n        for (let k in props) {\n            let prop = props[k];\n            let { attrName } = prop;\n            if (attrName) {\n                if (isUndefined(this[prop.name])) {\n                    if (this.hasAttribute(attrName)) {\n                        this[prop.name] = getValue(prop, this.getAttribute(attrName));\n                    }\n                } else {\n                    setAttribute(this, attrName, this[prop.name]);\n                }\n            }\n        }\n    }\n    /**\n     * On `attributeChanged` callback, sync attributes with properties.\n     * @param {String} attrName The changed attribute name.\n     * @param {*} oldVal The value of the attribute before the change.\n     * @param {*} newVal The value of the attribute after the change.\n     */\n    attributeChangedCallback(attr, oldVal, newVal) {\n        super.attributeChangedCallback(attr, oldVal, newVal);\n        let props = this.properties;\n        for (let k in props) {\n            let prop = props[k];\n            if (prop.attrName === attr) {\n                this[prop.name] = getValue(prop, newVal);\n                return;\n            }\n        }\n    }\n    /**\n     * Create a listener for node's property changes.\n     * @param {string} propName The property name to observe.\n     * @param {Function} callback The callback to fire.\n     * @return {Object} An object with `cancel` method.\n     */\n    observeProperty(propName, callback) {\n        this.properties[propName].observe(callback);\n    }\n};\n","let doc = document;\n\nexport function createStyle(id) {\n    let styleElem = doc.createElement('style');\n    styleElem.type = 'text/css';\n    styleElem.setAttribute('id', `style-${id}`);\n    let head = doc.head;\n    if (head.firstElementChild) {\n        head.insertBefore(styleElem, head.firstElementChild);\n    } else {\n        head.appendChild(styleElem);\n    }\n    return styleElem;\n}\n\n/**\n * Add `<style>` tag for the component.\n * @param {String} styleElem The CSS style element.\n * @param {String} style A CSS string.\n * @return {HTMLStyleElement} the style tag created.\n */\nexport function importStyle(styleElem, style) {\n    if (style !== styleElem.textContent) {\n        styleElem.textContent = style;\n        return true;\n    }\n    return false;\n}\n","import { registry } from './registry.js';\nimport { isString } from './typeof.js';\n\nfunction isNew(node) {\n    try {\n        return !isString(node.outerHTML);\n    } catch (ex) {\n        return true;\n    }\n}\n\nexport function shim(Original) {\n    class Polyfilled {\n        constructor() {\n            if (!isNew(this)) {\n                return this;\n            }\n            let desc = registry.get(this.constructor);\n            let config = desc.config;\n            // Find the tagname of the constructor and create a new element with it\n            let element = document.createElement(\n                config.extends ? config.extends : desc.is\n            );\n            element.__proto__ = desc.Ctr.prototype;\n            if (config.extends) {\n                element.setAttribute('is', desc.is);\n            }\n            return element;\n        }\n    }\n    Polyfilled.prototype = Object.create(Original.prototype, {\n        constructor: {\n            value: Polyfilled,\n            configurable: true,\n            writable: true,\n        },\n    });\n    return Polyfilled;\n}\n","/**\n * DNA\n * (c) 2015-2016 Chialab (http://www.chialab.com) <dev@chialab.io>\n * http://dna.chialab.io\n *\n * Just another components pattern.\n * Use with Custom Elements specs.\n */\nimport { mix, prop, shim, HELPERS, DOM, MIXINS } from './src/library-helpers.js';\nimport { registry } from './src/lib/registry.js';\n\nexport { mix, prop, shim, HELPERS, DOM, MIXINS };\nexport { registry };\nexport function define(tagName, Component, config) {\n    return registry.define(tagName, Component, config);\n}\nexport function render(node, Component, props) {\n    let element = new Component();\n    for (let k in props) {\n        element[k] = props[k];\n    }\n    DOM.appendChild(node, element);\n    return element;\n}\n\n/**\n * Simple Custom Component with some behaviors.\n * @class BaseComponent\n * @extends HTMLElement\n *\n * @example\n * my-component.js\n * ```js\n * import { BaseComponent } from 'dna/component';\n * export class MyComponent extends BaseComponent {\n *   static get observedAttributes() {\n *     return ['...', '...'];\n *   }\n *   get css() {\n *     return '...';\n *   }\n *   get events() {\n *     return {\n *       '...': '...'\n *     };\n *   }\n *   get template() {\n *     return '...';\n *   }\n *   get properties() {\n *     return { ... };\n *   }\n * }\n */\nexport class BaseComponent extends mix(\n    shim(self.HTMLElement)\n).with(\n    MIXINS.ComponentMixin,\n    MIXINS.PropertiesMixin,\n    MIXINS.StyleMixin,\n    MIXINS.EventsMixin,\n    MIXINS.TemplateMixin\n) {}\n","import { DOM } from 'dna-components';\n\nfunction onCreation(nodes) {\n    [].forEach.call(nodes, (node) => {\n        if (!node.is) {\n            DOM.create(node);\n        } else {\n            DOM.connect(node);\n        }\n        if (node.children) {\n            onCreation(node.children);\n        }\n    });\n}\n\nconst OBSERVER = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n        switch (mutation.type) {\n        case 'childList': {\n            if (mutation.addedNodes) {\n                onCreation(mutation.addedNodes);\n            }\n            if (mutation.removedNodes) {\n                mutation.removedNodes.forEach((node) => {\n                    DOM.disconnect(node);\n                });\n            }\n            break;\n        }\n        case 'attributes': {\n            let attributeName = mutation.attributeName;\n            if (attributeName === 'is') {\n                break;\n            }\n            let node = mutation.target;\n            DOM.update(\n                node,\n                attributeName,\n                mutation.oldValue,\n                node.getAttribute(attributeName)\n            );\n            break;\n        }\n        }\n    });\n});\n\nOBSERVER.observe(document.body, {\n    attributes: true,\n    childList: true,\n    subtree: true,\n});\n","let CustomEvent;\n\ntry {\n    // eslint-disable-next-line\n    let ev = new self.CustomEvent('test');\n    CustomEvent = self.CustomEvent;\n} catch(ex) {\n    CustomEvent = function(event, params) {\n        params = params || {\n            bubbles: false,\n            cancelable: false,\n            detail: undefined,\n        };\n        let evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return evt;\n    };\n    CustomEvent.prototype = self.CustomEvent.prototype;\n}\n\nexport { CustomEvent };\n","import { isFunction, isString } from './typeof.js';\n\nexport const registry = {\n    components: {},\n    define(name, Ctr, config = {}) {\n        this.components[name.toLowerCase()] = {\n            is: name,\n            Ctr,\n            config,\n        };\n    },\n    get(name) {\n        if (isString(name)) {\n            return this.components[name.toLowerCase()];\n        } else if (isFunction(name)) {\n            for (let k in this.components) {\n                let desc = this.components[k];\n                if (desc.Ctr === name) {\n                    return desc;\n                }\n            }\n        }\n    },\n};\n","export const ComponentMixin = (SuperClass) => class extends SuperClass {\n    get is() {\n        return this.getAttribute('is') || this.localName;\n    }\n    /**\n     * Fires when an instance was inserted into the document.\n     */\n    connectedCallback() {}\n    /**\n     * Fires when an instance was detached from the document.\n     */\n    disconnectedCallback() {}\n    /**\n     * Fires when an attribute was added, removed, or updated.\n     * @param {String} attrName The changed attribute name.\n     * @param {*} oldVal The value of the attribute before the change.\n     * @param {*} newVal The value of the attribute after the change.\n     */\n    attributeChangedCallback() {}\n};\n","const ELEM_PROTO = Element.prototype;\n\nexport const matches = ELEM_PROTO.matches ||\n    ELEM_PROTO.matchesSelector ||\n    ELEM_PROTO.mozMatchesSelector ||\n    ELEM_PROTO.msMatchesSelector ||\n    ELEM_PROTO.oMatchesSelector ||\n    ELEM_PROTO.webkitMatchesSelector;\n","import { isString, isFunction } from '../lib/typeof.js';\nimport { matches } from '../polyfills/matches.js';\nimport { dispatch } from '../lib/dispatch.js';\n\nconst SPLIT_SELECTOR = /([^\\s]+)(.*)?/;\n\n/**\n * Simple Custom Component with events delegation,\n * It also implement a `dispatchEvent` wrapper named `trigger`.\n *\n * @example\n * my-component.js\n * ```js\n * import { EventsMixin, Component, mix } from 'dna/component';\n * export class MyComponent extends mix(Component).with(EventsMixin) {\n *   get events() {\n *     return {\n *       'click button': 'onButtonClick'\n *     }\n *   }\n *   onButtonClick() {\n *     console.log('button clicked');\n *   }\n * }\n * ```\n * app.js\n * ```js\n * import { define } from 'dna/component';\n * import { MyComponent } from './components/my-component/my-component.js';\n * define('my-component', MyComponent);\n * var element = new MyComponent();\n * var button = document.createElement('button');\n * button.innerText = 'Click me';\n * element.appendChild(button);\n * button.click(); // logs \"button clicked\"\n * ```\n */\nexport const EventsMixin = (SuperClass) => class extends SuperClass {\n    /**\n     * Fires when an instance of the element is created.\n     */\n    constructor() {\n        super();\n        // bind events\n        let events = this.events || {};\n        for (let k in events) {\n            let callback = isString(events[k]) ?\n                this[events[k]] :\n                events[k];\n            if (isFunction(callback)) {\n                let rule = k.match(SPLIT_SELECTOR);\n                let evName = rule[1];\n                let selector = (rule[2] || '').trim();\n                if (selector) {\n                    this.delegate(evName, selector, callback);\n                } else {\n                    this.addEventListener(evName, (ev) => {\n                        callback.call(this, ev, this);\n                    });\n                }\n            } else {\n                throw new TypeError('Invalid callback for event.');\n            }\n        }\n    }\n    delegate(evName, selector, callback) {\n        this.addEventListener(evName, (event) => {\n            let target = event.target;\n            while (target && target !== this) {\n                if (matches.call(target, selector)) {\n                    callback.call(this, event, target);\n                }\n                target = target.parentNode;\n            }\n        });\n    }\n    /**\n     * `Node.prototype.dispatchEvent` wrapper.\n     * @param {String} evName The name of the event to fire.\n     * @param {Object} data A set of custom data to pass to the event.\n     * @param {Boolean} bubbles Should the event bubble throw the DOM tree.\n     * @param {Boolean} cancelable Can be the event cancel by a callback.\n     */\n    trigger(evName, data, bubbles = true, cancelable = true) {\n        return dispatch(this, evName, data, bubbles, cancelable);\n    }\n};\n","import { createStyle, importStyle } from '../lib/style.js';\n\n/**\n * Simple Custom Component with css style handling using the `css` property.\n *\n * @example\n * my-component.js\n * ```js\n * import { StyleMixin, Component, mix } from 'dna/component';\n * export class MyComponent extends mix(Component).with(StyleMixin) {\n *   get css() {\n *     return '.my-component p { color: red; }'\n *   }\n * }\n * ```\n * app.js\n * ```js\n * import { define } from 'dna/component';\n * import { MyComponent } from './components/my-component/my-component.js';\n * define('my-component', MyComponent);\n * var element = new MyComponent();\n * var p = document.createElement('p');\n * p.innerText = 'Paragraph';\n * element.appendChild(p); // text inside `p` gets the red color\n * ```\n */\nexport const StyleMixin = (SuperClass) => class extends SuperClass {\n    /**\n     * Fires when an instance of the element is created.\n     */\n    constructor() {\n        super();\n        if (!this.styleElem) {\n            let Ctr = this.constructor;\n            Object.defineProperty(Ctr.prototype, 'styleElem', {\n                value: createStyle(this.is),\n            });\n        }\n        this.updateCSS();\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n        this.classList.add(this.is);\n    }\n\n    updateCSS() {\n        let style = this.css;\n        if (style) {\n            importStyle(this.styleElem, style);\n        }\n    }\n};\n","import { isFunction, isString } from '../lib/typeof.js';\n\n/**\n * Simple Custom Component with template handling using the `template` property.\n *\n * @example\n * my-component.js\n * ```js\n * import { Component, TemplateMixin, mix } from 'dna/component';\n * export class MyComponent extends mix(Component).with(TemplateMixin) {\n *   get template() {\n *     return '<h1>${this.name}</h1>';\n *   }\n *   get name() {\n *     return 'Newton';\n *   }\n * }\n * ```\n * app.js\n * ```js\n * import { define } from 'dna/component';\n * import { MyComponent } from './components/my-component/my-component.js';\n * define('my-component', MyComponent);\n * var element = new MyComponent();\n * console.log(element.innerHTML); // logs \"<h1>Newton</h1>\"\n * ```\n */\nexport const TemplateMixin = (SuperClass) => class extends SuperClass {\n    constructor() {\n        super();\n        if (this.template) {\n            let props = this.properties;\n            if (props) {\n                let callback = () => {\n                    this.render();\n                };\n                for (let k in props) {\n                    props[k].observe(callback);\n                }\n            }\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        if (this.template) {\n            this.render();\n        }\n    }\n    /**\n     * Update Component child nodes.\n     */\n    render() {\n        let tpl = this.template;\n        /* istanbul ignore else */\n        if (isFunction(tpl)) {\n            tpl();\n        } else if (isString(tpl)) {\n            this.innerHTML = tpl;\n        } else {\n            throw new Error('Invalid template property.');\n        }\n    }\n};\n","/* eslint-disable prefer-rest-params */\nexport const reduce = Array.prototype.reduce || function(callback /*, initialValue*/ ) {\n    'use strict';\n    let t = this;\n    let len = t.length;\n    let k = 0;\n    let value;\n    if (arguments.length === 2) {\n        value = arguments[1];\n    } else {\n        while (k < len && !(k in t)) {\n            k++;\n        }\n        value = t[k++];\n    }\n    for (; k < len; k++) {\n        if (k in t) {\n            value = callback(value, t[k], k, t);\n        }\n    }\n    return value;\n};\n","import { reduce } from '../polyfills/reduce.js';\n/**\n * @author Justin Fagnani\n * @see https://github.com/justinfagnani/mixwith.js\n */\nclass Mixin {\n    constructor(superclass) {\n        superclass = superclass || class {};\n        this.superclass = superclass;\n    }\n\n    with() {\n        // eslint-disable-next-line\n        let args = [].slice.call(arguments, 0);\n        return reduce.call(args, (c, mixin) => mixin(c), this.superclass);\n    }\n}\n\nexport const mix = (superClass) => new Mixin(superClass);\n","import { dispatch } from './lib/dispatch.js';\nimport * as DOM_HELPERS from './lib/nodes.js';\nimport { ComponentMixin } from './mixins/component.js';\nimport { PropertiesMixin } from './mixins/properties-component.js';\nimport { EventsMixin } from './mixins/events-component.js';\nimport { StyleMixin } from './mixins/style-component.js';\nimport { TemplateMixin } from './mixins/template-component.js';\n\nexport const DOM = DOM_HELPERS;\nexport const MIXINS = {\n    ComponentMixin,\n    PropertiesMixin,\n    EventsMixin,\n    StyleMixin,\n    TemplateMixin,\n};\nexport const HELPERS = {\n    dispatch,\n};\nexport { mix } from './lib/mixins.js';\nexport { prop } from './lib/property.js';\nexport { shim } from './lib/shim.js';\n"],"names":["isFunction","fn","isString","str","isObject","obj","isUndefined","isArray","Array","dispatch","node","evName","data","bubbles","cancelable","TypeError","ev","CustomEvent","dispatchEvent","getComponent","nodeType","Node","ELEMENT_NODE","is","getAttribute","tagName","registry","get","connect","CONNECTED","call","disconnect","DISCONNECTED","update","name","oldValue","newValue","UPDATED","bind","Ctr","__proto__","prototype","defineProperty","create","descriptor","createElement","appendChild","parent","parentNode","lastElementChild","removeChild","setAttribute","value","attrs","constructor","observedAttributes","indexOf","removeAttribute","prop","ctrs","Property","getValue","property","attrVal","accepts","Boolean","String","JSON","parse","ex","context","attr","currentAttrValue","undefined","createStyle","id","styleElem","doc","type","head","firstElementChild","insertBefore","importStyle","style","textContent","isNew","outerHTML","shim","Original","Polyfilled","this","desc","config","element","document","extends","Object","define","Component","render","props","k","onCreation","nodes","forEach","children","self","event","params","evt","createEvent","initCustomEvent","detail","components","toLowerCase","ComponentMixin","SuperClass","connectedCallback","disconnectedCallback","attributeChangedCallback","localName","_","required","validator","_setter","val","getterFn","_this","setterFn","validateType","changed","observe","push","unobserve","io","splice","i","len","length","named","attrRequested","attrName","default","initValue","defaultValue","freeze","scoped","scope","attribute","eventName","require","getter","callback","_this2","setter","validate","init","Error","Number","PropertiesMixin","_SuperClass","properties","reduce","res","partialProps","hasAttribute","oldVal","newVal","observeProperty","propName","ELEM_PROTO","Element","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","SPLIT_SELECTOR","EventsMixin","events","rule","match","selector","trim","delegate","addEventListener","target","trigger","StyleMixin","updateCSS","classList","add","css","TemplateMixin","template","tpl","innerHTML","t","arguments","Mixin","superclass","with","args","slice","c","mixin","mix","superClass","DOM","DOM_HELPERS","MIXINS","HELPERS","BaseComponent","HTMLElement","OBSERVER","MutationObserver","mutations","mutation","addedNodes","removedNodes","attributeName","body"],"mappings":"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"}